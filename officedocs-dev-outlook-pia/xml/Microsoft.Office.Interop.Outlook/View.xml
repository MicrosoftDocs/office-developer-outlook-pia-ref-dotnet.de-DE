<Type Name="View" FullName="Microsoft.Office.Interop.Outlook.View">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87b0e2f941bfdd33517182275daf75a85449684a" /><Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/12/2019" /><Meta Name="ms.locfileid" Value="27903167" /></Metadata><TypeSignature Language="C#" Value="public interface View" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract View" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.View" />
  <TypeSignature Language="VB.NET" Value="Public Interface View" />
  <TypeSignature Language="C++ CLI" Value="public interface class View" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063095-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="92544-101">Stellt eine anpassbare Ansicht dar, die zum Sortieren, Gruppieren und Anzeigen von Daten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="92544-101">Represents a customizable view used to sort, group, and view data.</span></span></summary>
    <remarks><para><span data-ttu-id="92544-p101">Das <b>View</b> -Objekt ermöglicht Ihnen das Erstellen anpassbare Ansichten, mit denen Sie besser sortiert, gruppiert und schließlich angezeigt Daten aller verschiedenen Typen. Es gibt eine Vielzahl von anderen Ansichtstypen, die die Flexibilität, erstellen und Wartung von wichtigen Daten erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="92544-p101">The <b>View</b> object allows you to create customizable views that allow you to better sort, group and ultimately view data of all different types. There are a variety of different view types that provide the flexibility needed to create and maintain your important data.</span></span></para>
      <list type="bullet">
        <item>
          <para><span data-ttu-id="92544-p102">Der Tabellenansichtstyp (olTableView) erlaubt die Anzeige von Daten in einer einfachen feldbasierten Tabelle.
</span><span class="sxs-lookup"><span data-stu-id="92544-p102">The table view type (olTableView) allows you to view data in a simple field-based table. </span></span></para>
        </item>
        <item>
          <para> <span data-ttu-id="92544-p103">
				Der Kalenderansichtstyp (olCalendarView) erlaubt die Anzeige von Daten im Kalenderformat.
</span><span class="sxs-lookup"><span data-stu-id="92544-p103">The Calendar view type (olCalendarView) allows you to view data in a calendar format. </span></span></para>
        </item>
        <item>
          <para> <span data-ttu-id="92544-p104">
				Der Kartenansichtstyp (olCardView) erlaubt die Anzeige von Daten in einer Reihe von Karten. Jede Karte zeigt die im Objekt enthaltenen Informationen an und kann sortiert werden.
</span><span class="sxs-lookup"><span data-stu-id="92544-p104">The card view type (olCardView) allows you to view data in a series of cards. Each card displays the information contained by the item and can be sorted. </span></span></para>
        </item>
        <item>
          <para> <span data-ttu-id="92544-p105">
				Der Symbolansichtstyp (olIconView) erlaubt die Anzeige von Daten in Form von Symbolen, ähnlich einem Windows-Ordner oder Explorer. 
</span><span class="sxs-lookup"><span data-stu-id="92544-p105">The icon view type (olIconView) allows you to view data as icons, similar to a Windows folder or explorer.  </span></span></para>
        </item>
        <item>
          <para> <span data-ttu-id="92544-p106">
				Der Zeitskala-Ansichtstyp (olTimelineView) erlaubt die Anzeige von Daten in der Reihenfolge des Empfangs auf einer anpassbaren linearen Zeitskala.
</span><span class="sxs-lookup"><span data-stu-id="92544-p106">The timeline view type (olTimelineView) allows you to view data as it is received in a customizable linear time line. </span></span></para>
        </item>
      </list>
      <para><span data-ttu-id="92544-110">Ansichten definiert sind und des <b>View</b> -Objekts mit angepasst <see cref="P:Microsoft.Office.Interop.Outlook.View.XML" /> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="92544-110">Views are defined and customized using the <b>View</b> object's <see cref="P:Microsoft.Office.Interop.Outlook.View.XML" />  property.</span></span> <span data-ttu-id="92544-111">Die <b>XML</b> -Eigenschaft ermöglicht Ihnen das Erstellen und Festlegen eines angepassten XML-Schemas, das die verschiedenen Features einer Ansicht definiert.</span><span class="sxs-lookup"><span data-stu-id="92544-111">The <b>XML</b> property allows you to create and set a customized XML schema that defines the various features of a view.</span></span></para>
      <para><span data-ttu-id="92544-112">Verwenden von <b>Ansichten</b>(<paramref name="index" />), wobei <paramref name="index" /> ist der Name des <b>View</b> -Objekts oder sein Ordinalwert ist, um ein einzelnes <b>View</b> -Objekt zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="92544-112">Use <b>Views</b>(<paramref name="index" />), where <paramref name="index" /> is the name of the <b>View</b> object or its ordinal value, to return a single <b>View</b> object.</span></span></para>
      <para><span data-ttu-id="92544-113">Verwendung der <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" /> -Methode der <b>Views</b> -Auflistung eine neue Ansicht zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="92544-113">Use the <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" />  method of the <b>Views</b> collection to create a new view.</span></span> </para>
      <para><span data-ttu-id="92544-114">Verwenden Sie immer <see cref="M:Microsoft.Office.Interop.Outlook.View.Save" /> um eine Ansicht zu speichern, nachdem Sie eine beliebige Eigenschaft der Ansicht ändern.</span><span class="sxs-lookup"><span data-stu-id="92544-114">Always use <see cref="M:Microsoft.Office.Interop.Outlook.View.Save" /> to save a view after you change any property of the view.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-115">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> -Objekt, das das übergeordnete Outlook-Anwendung für das Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="92544-115">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="92544-116">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="92544-116">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92544-117">Wendet die Ansicht die Microsoft Outlook-Benutzeroberfläche an.</span><span class="sxs-lookup"><span data-stu-id="92544-117">Applies the view to the Microsoft Outlook user interface.</span></span></summary>
        <remarks><para><span data-ttu-id="92544-118">Um die aktuelle Ansicht ordnungsgemäß zurückzusetzen, führen Sie eine <see cref="M:Microsoft.Office.Interop.Outlook.View.Reset" /> , und klicken Sie dann <b>View.Apply</b>.</span><span class="sxs-lookup"><span data-stu-id="92544-118">To properly reset the current view, you must do a <see cref="M:Microsoft.Office.Interop.Outlook.View.Reset" /> and then a <b>View.Apply</b>.</span></span> <span data-ttu-id="92544-119">Die Reihenfolge der Aufrufe wird im folgenden Codebeispiel dargestellt:</span><span class="sxs-lookup"><span data-stu-id="92544-119">The code sample below illustrates the order of the calls:</span></span></para>
          <code>Sub ResetView()
    Dim v As Outlook.View
    ' Save a reference to the current view object
    v = Application.ActiveExplorer().CurrentView
    ' Reset and then apply the current view
    v.Reset()
    v.Apply()
End Sub</code>
          <code>private void ResetView()
{
    // Save a reference to the current view object    
    Outlook.View v = Application.ActiveExplorer().CurrentView 
        as Outlook.View; 
    
    // Reset and then apply the current view
    v.Reset();
    v.Apply();
}</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-120">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> Konstante, die die Klasse des Objekts angibt.</span><span class="sxs-lookup"><span data-stu-id="92544-120">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="92544-121">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="92544-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.View Copy (string Name, Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Outlook.View Copy([in]string Name, [in]valuetype Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Copy(System.String,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Name As String, Optional SaveOption As OlViewSaveOption) As View" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61490)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="SaveOption" Type="Microsoft.Office.Interop.Outlook.OlViewSaveOption" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="92544-122">Den Namen des neuen <b>View</b> -Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="92544-122">Represents the name of the new <b>View</b> object.</span></span></param>
        <param name="SaveOption"><span data-ttu-id="92544-123">Speichern, die Berechtigungen des <b>View</b> -Objekts definiert.</span><span class="sxs-lookup"><span data-stu-id="92544-123">The save option that defines the permissions of the <b>View</b> object.</span></span></param>
        <summary><span data-ttu-id="92544-124">Erstellt eine neue Instanz einer <see cref="T:Microsoft.Office.Interop.Outlook.View" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="92544-124">Creates a new instance of a <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92544-125">Ein Objekt wird aus der Auflistung gelöscht.</span><span class="sxs-lookup"><span data-stu-id="92544-125">Deletes an object from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-126">Zurückgeben oder festlegen einen <b>Zeichenfolge</b> (<b>String</b> in c#)-Wert, der den Filter für eine Ansicht darstellt.</span><span class="sxs-lookup"><span data-stu-id="92544-126">Returns or sets a <b>String</b> (<b>string</b> in C#) value that represents the filter for a view.</span></span>  <span data-ttu-id="92544-127">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="92544-127">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92544-128">Der Wert dieser Eigenschaft ist eine Zeichenfolge in der DASL-Syntax, die den aktuellen Filter für die Ansicht darstellt.</span><span class="sxs-lookup"><span data-stu-id="92544-128">The value of this property is a string, in DAV Searching and Locating (DASL) syntax, that represents the current filter for the view.</span></span> <span data-ttu-id="92544-129">Weitere Informationen zur Verwendung der DASL-Syntax zum Filtern von Elementen in einer Ansicht finden Sie unter <a href="http://go.microsoft.com/fwlink/?LinkId=87855">Filtern von Elementen</a></span><span class="sxs-lookup"><span data-stu-id="92544-129">For more information about using DASL syntax to filter items in a view, see <a href="http://go.microsoft.com/fwlink/?LinkId=87855">Filtering Items</a></span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToDate">
      <MemberSignature Language="C#" Value="public void GoToDate (DateTime Date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoToDate([in]valuetype System.DateTime Date) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.GoToDate(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoToDate (Date As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoToDate(DateTime Date);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Date"><span data-ttu-id="92544-130">Das Datum, in das die Ansicht geändert werden soll.</span><span class="sxs-lookup"><span data-stu-id="92544-130">The date to which the view should be changed.</span></span></param>
        <summary><span data-ttu-id="92544-131">Ändert das von der aktuellen Ansicht zum Anzeigen von Informationen verwendete Datum.</span><span class="sxs-lookup"><span data-stu-id="92544-131">Changes the date used by the current view to display information.</span></span></summary>
        <remarks><para><span data-ttu-id="92544-132">Fahren Sie mit in einer aktuellen Ansicht, wie ein Datum an ein <see cref="T:Microsoft.Office.Interop.Outlook.CalendarView" /> -Objekts, rufen Sie zuerst ein <see cref="T:Microsoft.Office.Interop.Outlook.View" /> -Objekt für die aktuelle Ansicht mithilfe von <see cref="P:Microsoft.Office.Interop.Outlook._Explorer.CurrentView" /> anstelle von <see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.CurrentView" />.</span><span class="sxs-lookup"><span data-stu-id="92544-132">To specify a date to go to in a current view, such as a <see cref="T:Microsoft.Office.Interop.Outlook.CalendarView" /> object, you should first obtain a <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object for the current view by using <see cref="P:Microsoft.Office.Interop.Outlook._Explorer.CurrentView" /> instead of <see cref="P:Microsoft.Office.Interop.Outlook.MAPIFolder.CurrentView" />.</span></span> <span data-ttu-id="92544-133">Im folgenden Codebeispiel wird veranschaulicht, wie zum Ausführen dieser Aktion.</span><span class="sxs-lookup"><span data-stu-id="92544-133">The following code sample demonstrates how to perform this action.</span></span> </para>
          <code>Sub TestGoToDate()
    Dim oCV As Outlook.CalendarView
    Dim oExpl As Outlook.Explorer
    Dim datGoTo As Date

    datGoTo = "11/7/2005"

    ' Display the contents of the Calendar default folder.
    oExpl = Application.Explorers.Add( _
        Application.Session.GetDefaultFolder( -
        Outlook.OlDefaultFolders.olFolderCalendar), _
        Outlook.OlFolderDisplayMode.olFolderDisplayFolderOnly)
    oExpl.Display()

    ' Retrieve the current view by calling the 
    ' CurrentView property of the Explorer object.
    oCV = oExpl.CurrentView

    ' Set the CalendarViewMode property of the 
    ' current view to display items by day.
    oCV.CalendarViewMode = Outlook.OlCalendarViewMode.olCalendarViewDay

    ' Call the GoToDate method to set the date
    ' for which information is displayed in the view.
    oCV.GoToDate(datGoTo)
End Sub</code>
          <code>private void TestGoToDate()
{
    Outlook.CalendarView oCV;
    Outlook.Explorer oExpl;
    System.DateTime datGoTo;

    datGoTo = DateTime.Parse("11/7/2005");

    // Display the contents of the Calendar default folder.
    oExpl = Application.Explorers.Add(
        Application.Session.GetDefaultFolder(
        Outlook.OlDefaultFolders.olFolderCalendar),
        Outlook.OlFolderDisplayMode.olFolderDisplayFolderOnly);
    oExpl.Display();

    // Retrieve the current view by calling the 
    // CurrentView property of the Explorer object.
    oCV = (Outlook.CalendarView)(oExpl.CurrentView);

    // Set the CalendarViewMode property of the 
    // current view to display items by day.
    oCV.CalendarViewMode = 
        Outlook.OlCalendarViewMode.olCalendarViewDay;

    // Call the GoToDate method to set the date
    // for which information is displayed in the view.
    oCV.GoToDate(datGoTo);
}</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-134">Zurückgeben oder festlegen einen <b>Zeichenfolge</b> (<b>String</b> in c#)-Wert, der die Einstellung für die Sprache für das Objekt darstellt, die verwendete Sprache im Menü definiert.</span><span class="sxs-lookup"><span data-stu-id="92544-134">Returns or sets a <b>String</b> (<b>string</b> in C#) value that represents the language setting for the object that defines the language used in the menu.</span></span> <span data-ttu-id="92544-135">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="92544-135">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92544-136">Die <b>Language</b> -Eigenschaft verwendet eine <b>Zeichenfolge</b> (<b>String</b> in c#), um ein ISO-Sprachkennzeichen darzustellen.</span><span class="sxs-lookup"><span data-stu-id="92544-136">The <b>Language</b> property uses a <b>String</b> (<b>string</b> in C#) to represent an ISO language tag.</span></span> <span data-ttu-id="92544-137">Beispielsweise stellt die Zeichenfolge "EN-US" den ISO-Code für "United States - English."</span><span class="sxs-lookup"><span data-stu-id="92544-137">For example, the string "EN-US" represents the ISO code for "United States - English."</span></span></para>
          <para><span data-ttu-id="92544-p117">Wenn ein gültiger Sprachcode angegeben ist, steht das Objekt nur im Menü Ansicht für den angegebenen Sprachtyp zur Verfügung. Wenn kein Wert angegeben ist, ist das Objektelement für alle Sprachtypen verfügbar. Der Standardwert dieser Eigenschaft ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="92544-p117">If a valid language code is specified, the object will only be available in the View menu for the specified language type. If no value is specified, the object item is available for all language types. The default value for this property is an empty string.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LockUserChanges">
      <MemberSignature Language="C#" Value="public bool LockUserChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LockUserChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.LockUserChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property LockUserChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LockUserChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64064)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-141">Gibt zurück oder legt einen <b>Boolean</b> (<b>Bool</b> in c#) Wert, der angibt, ob ein Benutzer die Einstellungen der aktuellen Ansicht ändern kann.</span><span class="sxs-lookup"><span data-stu-id="92544-141">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) value that indicates whether a user can modify the settings of the current view.</span></span> <span data-ttu-id="92544-142">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="92544-142">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92544-p119">Wenn <b>True</b>, der Benutzer die Einstellungen der aktuellen Ansicht ändern kann. Änderungen an der Benutzeroberfläche werden jedoch nicht gespeichert werden. Wenn <b>False</b> (Standard), alle Änderungen gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="92544-p119">If <b>True</b>, the user can modify the settings of the current view. However, changes made to the interface will not be saved. If <b>False</b> (the default), any changes will be saved.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Name" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-146">Zurückgeben oder festlegen einen <b>Zeichenfolge</b> (<b>String</b> in c#)-Wert, der den Anzeigenamen für das Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="92544-146">Returns or sets a <b>String</b> (<b>string</b> in C#) value that represents the display name for the object.</span></span> <span data-ttu-id="92544-147">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="92544-147">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-p121">Gibt das übergeordnete <b>Objekt</b> des angegebenen Objekts zurück. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="92544-p121">Returns the parent <b>Object</b> of the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64068)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92544-150">Setzt eine integrierte Microsoft Outlook-Ansicht auf ihre ursprünglichen Einstellungen zurück.</span><span class="sxs-lookup"><span data-stu-id="92544-150">Resets a built-in Microsoft Outlook view to its original settings.</span></span></summary>
        <remarks><para><span data-ttu-id="92544-151">Diese Methode ist nur für integrierte Outlook-Ansichten funktionsfähig.</span><span class="sxs-lookup"><span data-stu-id="92544-151">This method works only on built-in Outlook views.</span></span></para>
          <para><span data-ttu-id="92544-152">Wenn die aktuelle Ansicht ordnungsgemäß zurücksetzen möchten, müssen Sie eine <b>View.Reset</b> und führen Sie dann eine <see cref="M:Microsoft.Office.Interop.Outlook.View.Apply" />.</span><span class="sxs-lookup"><span data-stu-id="92544-152">To properly reset the current view, you must do a <b>View.Reset</b> and then a <see cref="M:Microsoft.Office.Interop.Outlook.View.Apply" />.</span></span> <span data-ttu-id="92544-153">Die Reihenfolge der Aufrufe wird im folgenden Codebeispiel dargestellt:</span><span class="sxs-lookup"><span data-stu-id="92544-153">The code sample below illustrates the order of the calls:</span></span></para>
          <code>Sub ResetView()
    Dim v as Outlook.View
    ' Save a reference to the current view object
    Set v = Application.ActiveExplorer().CurrentView
    ' Reset and then apply the current view
    v.Reset
    v.Apply
End Sub</code>
          <code>private void ResetView()
{
    // Save a reference to the current view object    
    Outlook.View v = Application.ActiveExplorer().CurrentView 
        as Outlook.View; 
    
    // Reset and then apply the current view
    v.Reset();
    v.Apply();
}</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook.View.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92544-154">Speichert die Ansicht oder die Änderungen an einer Ansicht.</span><span class="sxs-lookup"><span data-stu-id="92544-154">Saves the view, or saves the changes to a view.</span></span></summary>
        <remarks><para><span data-ttu-id="92544-155">Verwenden Sie immer <b>Speichern</b> um eine Ansicht zu speichern, nachdem Sie eine beliebige Eigenschaft der Ansicht ändern.</span><span class="sxs-lookup"><span data-stu-id="92544-155">Always use <b>Save</b> to save a view after you change any property of the view.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveOption">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlViewSaveOption SaveOption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.SaveOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SaveOption As OlViewSaveOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlViewSaveOption SaveOption { Microsoft::Office::Interop::Outlook::OlViewSaveOption get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlViewSaveOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-156">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.OlViewSaveOption" /> -Konstante, die Ordner angibt, in dem die angegebene Ansicht zur Verfügung steht, und die Berechtigungen lesen, der Ansicht zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="92544-156">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlViewSaveOption" />  constant that specifies the folders in which the specified view is available and the read permissions attached to the view.</span></span>  <span data-ttu-id="92544-157">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="92544-157">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92544-158"><b>SaveOption</b> -Eigenschaft wird festgelegt, wenn die <see cref="T:Microsoft.Office.Interop.Outlook.View" /> -Objekt wird erstellt, mit der <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="92544-158">The <b>SaveOption</b> property is set when the <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object is created by using the <see cref="M:Microsoft.Office.Interop.Outlook._Views.Add(System.String,Microsoft.Office.Interop.Outlook.OlViewType,Microsoft.Office.Interop.Outlook.OlViewSaveOption)" />  method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-159">Gibt die <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> -Objekt für die aktuelle Sitzung.</span><span class="sxs-lookup"><span data-stu-id="92544-159">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="92544-160">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="92544-160">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92544-161">Die <b>Session</b> -Eigenschaft und die <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> -Methode kann austauschbar verwendet werden, um das <b>NameSpace</b> -Objekt für die aktuelle Sitzung abzurufen.</span><span class="sxs-lookup"><span data-stu-id="92544-161">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="92544-162">Beide Elemente dienen demselben Zweck.</span><span class="sxs-lookup"><span data-stu-id="92544-162">Both members serve the same purpose.</span></span> <span data-ttu-id="92544-163">Führen Sie die folgenden Paare von Anweisungen beispielsweise die gleiche Funktion:</span><span class="sxs-lookup"><span data-stu-id="92544-163">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Standard">
      <MemberSignature Language="C#" Value="public bool Standard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Standard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.Standard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Standard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Standard { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64062)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-164">Gibt einen Wert <b>vom Typ Boolean</b> (<b>Bool</b> in c#), der angibt, ob die Ansicht eine integrierte Outlook-Ansicht ist oder nicht.</span><span class="sxs-lookup"><span data-stu-id="92544-164">Returns a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether or not the view is a built-in Outlook view.</span></span> <span data-ttu-id="92544-165">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="92544-165">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlViewType ViewType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlViewType ViewType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.ViewType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewType As OlViewType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlViewType ViewType { Microsoft::Office::Interop::Outlook::OlViewType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlViewType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-166">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.OlViewType" /> Geben Sie Konstante, die die Ansicht darstellt, der ein <see cref="T:Microsoft.Office.Interop.Outlook.View" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="92544-166">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlViewType" />  constant representing the view type of a <see cref="T:Microsoft.Office.Interop.Outlook.View" /> object.</span></span> <span data-ttu-id="92544-167">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="92544-167">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92544-p128">Diese Eigenschaft hat keine Auswirkung auf die im Verknüpfungsbereich angezeigten Symbole. Große Symbole wurden entfernt, und wenn diese Eigenschaft auf <b>OlLargeIcon</b> festgelegt ist, wird es nicht keinen Einfluss haben.</span><span class="sxs-lookup"><span data-stu-id="92544-p128">This property does not have any effect on the icons displayed in the Shortcuts pane. Large icons have been removed and if this property is set to <b>olLargeIcon</b>, it will not have any effect.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XML">
      <MemberSignature Language="C#" Value="public string XML { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XML" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook.View.XML" />
      <MemberSignature Language="VB.NET" Value="Public Property XML As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XML { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64060)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92544-170">Zurückgeben oder festlegen einen <b>Zeichenfolge</b> (<b>String</b> in c#)-Wert, der die XML-Definition der aktuellen Ansicht angibt.</span><span class="sxs-lookup"><span data-stu-id="92544-170">Returns or sets a <b>String</b> (<b>string</b> in C#) value that specifies the XML definition of the current view.</span></span>  <span data-ttu-id="92544-171">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="92544-171">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="92544-p130">Die XML-Definition beschreibt den Ansichtstyp mithilfe einer Reihe von Kennzeichen und Schlüsselwörtern, die verschiedenen Eigenschaften der eigentlichen Ansicht entsprechen. Beim Erstellen der Ansicht wird die XML-Definition analysiert, um die Einstellungen für die neue Ansicht zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="92544-p130">The XML definition describes the view type by using a series of tags and keywords corresponding to various properties of the view itself. When the view is created, the XML definition is parsed to render the settings for the new view.</span></span></para>
          <para><span data-ttu-id="92544-174">Um zu ermitteln, wie der XML-Code beim Erstellen von Ansichten strukturiert werden soll, können Sie eine Ansicht mithilfe der Outlook-Benutzeroberfläche erstellen und dann die XML-Eigenschaft für diese Ansicht abrufen.</span><span class="sxs-lookup"><span data-stu-id="92544-174">To determine how the XML should be structured when creating views, you can create a view by using the Outlook user interface and then you can retrieve the XML property for that view.</span></span></para>
          <para><span data-ttu-id="92544-175">Verwenden Sie zum programmgesteuerten Hinzufügen eines benutzerdefinierten Felds zu einer Ansicht der <see cref="M:Microsoft.Office.Interop.Outlook._ViewFields.Add(System.String)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="92544-175">To programmatically add a custom field to a view, use the <see cref="M:Microsoft.Office.Interop.Outlook._ViewFields.Add(System.String)" /> method.</span></span> <span data-ttu-id="92544-176">Dies ist die empfohlene Option zum Dynamisches Ändern der Ansicht über die <b>View.XML</b> -Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="92544-176">This is the recommended way to dynamically change the view over setting the <b>View.XML</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>