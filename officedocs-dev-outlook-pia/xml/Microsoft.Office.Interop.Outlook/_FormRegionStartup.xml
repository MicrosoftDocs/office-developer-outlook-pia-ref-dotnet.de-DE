<Type Name="_FormRegionStartup" FullName="Microsoft.Office.Interop.Outlook._FormRegionStartup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b34bd4c4bdf22fffb31f02727f5872c4371b275f" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20637320" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _FormRegionStartup" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FormRegionStartup" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FormRegionStartup" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FormRegionStartup" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063059-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fb82b-101">Dies ist eine primäre Schnittstelle in einem COM-Co-Klasse, die von verwaltetem Code für die Interoperabilität mit den entsprechenden COM-Objekt erforderlich ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb82b-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="fb82b-102">Verwenden Sie diese primäre Schnittstelle nur, wenn die Methode, den, die Sie verwenden möchten, den gleichen Namen wie die COM-Objekt gemeinsam verwendet. In diesem Fall dieser Schnittstelle zum Aufrufen der Methode umgewandelt, und in die neuesten Ereignisschnittstelle für die Verbindung an das Ereignis umgewandelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb82b-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="fb82b-103">Verwenden Sie andernfalls die .NET-Schnittstelle, die von der COM-Co-Klasse Zugriff auf Methoden, Eigenschaften und Ereignisse das COM-Objekt abgeleitet ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb82b-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="fb82b-104">Informationen über das COM-Objekt finden Sie unter <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb82b-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeforeFormRegionShow">
      <MemberSignature Language="C#" Value="public void BeforeFormRegionShow (Microsoft.Office.Interop.Outlook.FormRegion FormRegion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeFormRegionShow([in]class Microsoft.Office.Interop.Outlook.FormRegion FormRegion) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.BeforeFormRegionShow(Microsoft.Office.Interop.Outlook.FormRegion)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeFormRegionShow(Microsoft::Office::Interop::Outlook::FormRegion ^ FormRegion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64317)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegion" Type="Microsoft.Office.Interop.Outlook.FormRegion" />
      </Parameters>
      <Docs>
        <param name="FormRegion">
          <span data-ttu-id="fb82b-105">Das <b>FormRegion</b> -Objekt, das den Formularbereich, der angezeigt werden soll darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-105">The <b>FormRegion</b> object representing the form region that is to be displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb82b-106">Ermöglicht, dass die Benutzeroberfläche eines Formularbereichs vor dem Anzeigen durch ein Add-In aktualisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-106">Allows an add-in to update the user interface of a form region before it is displayed.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="fb82b-107">
            <para>Diese Methode können Sie in Outlook das <b>FormRegion</b> -Objekt an das Add-In übergeben, und ein Add-in zum Aktualisieren der Benutzeroberfläche des Formularbereichs, bevor es angezeigt wird, sodass, beispielsweise der Text der Bezeichnungen geändert werden kann oder irrelevante Inhalte kann unterdrückt werden kann. Es wird aufgerufen, nachdem die Steuerelemente werden instanziiert und das Layout wird berechnet, jedoch bevor das Formular Region sichtbar gemacht wird. </para>
            <para>Beim Implementieren dieser Methode sind zu beachten, die aus das Element abgerufen der <paramref name="FormRegion" /> Parameter (d. h., die <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" /> -Eigenschaft des <b>FormRegion</b> -Objekts) schreibgeschützt ist.</para>
            <para>Beispiele von Add-Ins in c# und Visual Basic .NET, die <b>FormRegionStartup</b>implementieren, finden Sie unter Code Sample downloads auf MSDN.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-107">
              <para>This method lets Outlook pass the <b>FormRegion</b> object to the add-in, and allows an add-in to update the user interface of the form region before it is displayed so that, for instance, the text of labels can be changed or irrelevant content can be suppressed. It is called after the controls are instantiated and the layout is calculated, but before the form region is made visible. </para>
              <para>When implementing this method, keep in mind that the item obtained from the <paramref name="FormRegion" /> parameter (that is, the <see cref="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" /> property of the <b>FormRegion</b> object) is read-only.</para>
              <para>For examples of add-ins in C# and  Visual Basic .NET that implement <b>FormRegionStartup</b>, see code sample downloads on MSDN.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionIcon">
      <MemberSignature Language="C#" Value="public object GetFormRegionIcon (string FormRegionName, int LCID, Microsoft.Office.Interop.Outlook.OlFormRegionIcon Icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionIcon([in]string FormRegionName, [in]int32 LCID, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionIcon Icon) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionIcon (FormRegionName As String, LCID As Integer, Icon As OlFormRegionIcon) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionIcon(System::String ^ FormRegionName, int LCID, Microsoft::Office::Interop::Outlook::OlFormRegionIcon Icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="LCID" Type="System.Int32" />
        <Parameter Name="Icon" Type="Microsoft.Office.Interop.Outlook.OlFormRegionIcon" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">
          <span data-ttu-id="fb82b-108">Der Name des Formularbereichs, der bei der Registrierung des Formularbereichs in der Windows-Registrierung verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-108">The name of the form region which is the name used when registering the form region in the Windows registry.</span>
          </span>
        </param>
        <param name="LCID">
          <span data-ttu-id="fb82b-p102">Die Gebietsschema-ID, die die aktuell von Outlook verwendete Sprache identifiziert. Dieser Wert wird verwendet, um die Lokalisierungszeichenfolgen für den Formularbereich abzurufen, die dieser Sprache entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-p102">The locale ID  that identifies the language that  Outlook is currently  using. This value is used to obtain the localization strings corresponding to this language for the form region.</span>
          </span>
        </param>
        <param name="Icon">
          <span data-ttu-id="fb82b-111">Eine Konstante, die den Symboltyp angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-111">A constant that identifies the type of icon.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb82b-112">Ruft eine Symbolgrafik ab, die für einen bestimmten Symboltyp eines Formularbereichs angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-112">Obtains an icon image that will be displayed for a particular type of icon for the form region.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb82b-113">Ein <b>Objekt</b> , das entweder ein Bytearray, die der Bilddatei an die ursprüngliche Bytes darstellt, oder ein <b>IPictureDisp</b> -Objekt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-113">An <b>Object</b> that is either a byte-array that represents the original bytes of the image file or an <b>IPictureDisp</b> object.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="fb82b-114">
            <para>Diese Methode ist für die direkte Verwendung durch ein Add-In implementiert werden und wird von Outlook aufgerufen. Als Teil der <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> Schnittstelle, diese Methode und die <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" /> Methode stellen einen Mechanismus bereit, über die ein Add-In kann registrieren ein Formularbereichs und Bereitstellen von Outlook mit XML-Manifest und die Symbole für den Formularbereich.</para>
            <para>, Wenn Sie möchten ein Add-in Symbole für einen Formularbereich bieten die ProgID des Add-Ins angeben, wenn Sie den Formularbereich in der Windows-Registrierung registrieren. Weitere Informationen zum Registrieren eines Formularbereichs finden Sie unter <a href="http://go.microsoft.com/fwlink/?LinkId=87933">Angeben von Formularbereichen in der Windows-Registrierung</a><b>GetFormRegionManifest</b> und die <b>GetFormRegionIcon</b> -Methoden des <b>FormRegionStartup</b> -Schnittstelle. </para>
            <para>Im XML-Manifest für den Formularbereich, unter dem Icons-Element, geben Sie das Wert Addin für jede der untergeordneten Elemente, in dem Sie ein benutzerdefiniertes Symbol verwenden möchten.  <b>GetFormRegionIcon</b> implementieren, sodass bei Outlook dieses Typs des Symbols als Argument für übergibt <paramref name="Icon" />, <b>GetFormRegionIcon</b> gibt das Bild des benutzerdefinierten Symbols zurück. Wenn Sie Outlook das Standardsymbol anzeigen möchten, implementieren Sie <b>GetFormRegionIcon</b> so, dass <b>Nothing</b> (ein Nullverweis (Nothing in Visual Basic) in c#) für diesen Typ des Symbols zurückgegeben wird. <b>GetFormRegionIcon</b> sollten auch zurückgeben <b>Nothing</b> (ein Nullverweis (Nothing in Visual Basic) in c#) bei <paramref name="Icon" /> ist <b>OlFormRegionIconDefault</b>.</para>
            <para>Beim Starten von Outlook, liest die Liste der von Formularbereichen in der Windows-Registrierung und speichert die Daten, die die Formularbereiche zugeordnet. Wenn bei einer ProgID ein Formularbereichs registriert wurde, wird Outlook zurückgreifen zu den entsprechenden Add-in durch Aufrufen der Implementierung der <b>GetFormRegionIcon</b> für ein Symbol in das XML-Manifest, das als Wert des ein untergeordnetes Element des Elements Symbole Addin verfügt. Beachten Sie, dass, wenn Sie in der Windows-Registrierung keine ProgID angeben, Outlook nicht der <b>GetFormRegionManifest</b> und <b>GetFormRegionIcon</b> -Methode aufgerufen werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-114">
              <para>This method is intended to be implemented by an add-in and called by Outlook. As part of the <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> interface, this method and the <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" /> method provide a mechanism through which an add-in can register a form region and provide Outlook with the XML manifest and the icons for the form region.</para>
              <para>If you would like an add-in to provide icons for a form region, specify the ProgID of the add-in when you register the form region in the Windows registry. For more information on registering a form region, see <a href="http://go.microsoft.com/fwlink/?LinkId=87933">Specifying Form Regions in the Windows Registry</a><b>GetFormRegionManifest</b> and the <b>GetFormRegionIcon</b> methods of the  <b>FormRegionStartup</b> interface. </para>
              <para>In the XML manifest for the form region, under the icons element, specify the value addin for each of the child elements where you would like to use a custom icon.  Implement <b>GetFormRegionIcon</b> such that when Outlook passes that type of icon as an argument for <paramref name="Icon" />,  <b>GetFormRegionIcon</b> returns the image of the custom icon. If you want Outlook to display the default icon, implement <b>GetFormRegionIcon</b> such that it returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) for that type of icon. <b>GetFormRegionIcon</b> should also return <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) when <paramref name="Icon" /> is <b>olFormRegionIconDefault</b>.</para>
              <para> When Outlook starts, it reads the list of form regions from the Windows registry and caches the data associated with the form regions. If a form region has been registered with a ProgID, Outlook will resort to the corresponding add-in by calling its implementation of <b>GetFormRegionIcon</b> for any icon in the XML manifest that has addin as the value of a child element of the icons element. Note that if you do not specify any ProgID in the Windows registry, Outlook will not call the  <b>GetFormRegionManifest</b> and <b>GetFormRegionIcon</b> methods.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionManifest">
      <MemberSignature Language="C#" Value="public object GetFormRegionManifest (string FormRegionName, int LCID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionManifest([in]string FormRegionName, [in]int32 LCID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionManifest(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionManifest (FormRegionName As String, LCID As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionManifest(System::String ^ FormRegionName, int LCID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64563)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="LCID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">
          <span data-ttu-id="fb82b-115">Der Name des Formularbereichs, der bei der Registrierung des Formularbereichs in der Windows-Registrierung verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-115">The name of the form region which is the name used when registering the form region in the Windows registry.</span>
          </span>
        </param>
        <param name="LCID">
          <span data-ttu-id="fb82b-p103">Die Gebietsschema-ID, die die aktuell von Outlook verwendete Sprache identifiziert. Dieser Wert wird verwendet, um die Lokalisierungszeichenfolgen für den Formularbereich abzurufen, die dieser Sprache entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-p103">The locale ID  that identifies the language that  Outlook is currently  using. This value is used to obtain the localization strings corresponding to this language for the form region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb82b-118">Ruft das XML-Manifest für einen Formularbereich ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-118">Obtains the XML manifest for a form region.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb82b-119">Ein <b>Objekt</b> , das das XML-Manifest für einen Formularbereich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-119">An <b>Object</b> that represents the XML manifest for a form region.</span>
          </span>
          <span data-ttu-id="fb82b-120">Diese XML-Zeichenfolge enthält Merkmale des Formularbereichs wie den Anzeigenamen (gemäß der Title-Element), beliebige dazugehörige Layoutdatei oder -add-in, unterstützte Benutzeraktionen und Lokalisierung Zeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-120">This XML string includes characteristics of the form region such as the display name (as specified by the title element), any associated layout file or add-in,  any supported user actions, and any localization strings.</span>
          </span>
          <span data-ttu-id="fb82b-121">Die XML-Daten muss das Formular Region XML-Schema entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-121">The XML must follow the form region XML schema.</span>
          </span>
          <span data-ttu-id="fb82b-122">Weitere Informationen über die XML-formularbereichsschema finden Sie unter Microsoft Outlook 2010 XML Schema Reference in der <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library.</a></span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-122">For more information on the form region XML schema, see the Microsoft Outlook 2010 XML Schema Reference in the <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="fb82b-123">
            <para>Diese Methode ist für die direkte Verwendung durch ein Add-In implementiert werden und wird von Outlook aufgerufen. Als Teil der <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> Schnittstelle, diese Methode und die <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" /> Methode stellen einen Mechanismus bereit, über die ein Add-In kann registrieren ein Formularbereichs und geben Outlook das XML-Manifest und die Symbole für den Formularbereich.</para>
            <para>, Wenn Sie möchten ein Add-in das XML-Manifest für einen Formularbereich bieten die ProgID des Add-Ins angeben, wenn Sie den Formularbereich in der Windows-Registrierung registrieren. Weitere Informationen zum Registrieren eines Formularbereichs finden Sie unter <a href="http://go.microsoft.com/fwlink/?LinkId=87933">Angeben von Formularbereichen in der Windows-Registrierung</a><b>GetFormRegionManifest</b> -Methode des <b>FormRegionStartup</b> -Schnittstelle. Beachten Sie, dass, wenn Sie in der Windows-Registrierung keine ProgID angeben, Outlook diese Methode nicht aufgerufen werden.</para>
            <para>Vertrauenden Seite auf ein Add-in zum Bereitstellen von XML-Manifest für einen Formularbereich auch bedeutet, dass das Add-in Symbole für den Formularbereich bereitstellen zulassen. Das Add-in muss auch die <b>GetFormRegionIcon</b> der <b>FormRegionStartup</b> -Schnittstelle implementieren. Outlook ruft <b>GetFormRegionIcon</b> -add-in angegebenen Symbole für den Formularbereich zu erhalten. Weitere Informationen zum Verwenden eines Add-Ins zum Symbole angeben, finden Sie unter <a href="http://go.microsoft.com/fwlink/?LinkId=87934">Vorgehensweise: Verwenden Sie ein Add-in zum Angeben von Symbolen für einen Formularbereich</a></para>
            <para> beim Starten von Outlook, liest die Liste der von Formularbereichen in der Windows-Registrierung und speichert die Daten. Basierend auf diese Daten, wenn Outlook bemerkt, dass ein Add-in angegeben wurde, geben Sie das XML-Manifest für einen Formularbereich, verwendet Outlook die ProgID in den zwischengespeicherten Daten und der Aufruf von dieses Add-in zum Abrufen die <b>GetFormRegionManifest</b> -Methode implementiert bereitgestellt der XML-Code, den Formularbereich angezeigt werden muss. Wenn das XML-Manifest nicht gültig ist und nicht das Formular Region XML-Schema entspricht, wird Outlook nicht den Formularbereich geladen werden. Auch wenn Sie in der Windows-Registrierung keine ProgID angeben, Outlook wird nicht aufrufen, die Methoden <b>GetFormRegionManifest</b> und <b>GetFormRegionIcon</b> .</para>
            <para>Outlook ignoriert die folgenden Elemente aus, wenn das Add-in das XML-Manifest bereitstellt:</para>
            <list type="bullet">
              <item>
                <para>Name: Outlook ignoriert den für dieses Element angegebenen Wert und verwendet den Namen für den Formularbereich in der Registrierung angegeben.</para>
              </item>
              <item>
                <para>LayoutFile: Outlook ignoriert dieses Element, da ein Add-in diesen Formularbereich erweitert.</para>
              </item>
              <item>
                <para>Addin: Outlook verwendet den Wert, der ein Gleichheitszeichen (=) vorangestellt ist in der Registrierung als ProgID des Add-Ins, wobei</para>
              </item>
              <item>
                <para>Datei-Attribut des StringOverride: Outlook ignoriert alle sekundären Lokalisierungsdatei nach dem Element StringOverride angegeben. Das Add-In kann <b>GetFormRegionManifest</b> zum Zurückgeben von Inline-XML-Manifest für die Lokalisierung für die angegebene Zeichenfolge implementieren <paramref name="LCID" />, oder verwalten Zeichenfolge Lokalisierung in eine andere Möglichkeit, beispielsweise mithilfe der .NET Framework-Lokalisierung, und klicken Sie dann zurückgeben die entsprechende XML-manifest für die angegebene <paramref name="LCID" />.</para>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-123">
              <para>This method is intended to be implemented by an add-in and called by Outlook. As part of the <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> interface, this method and the <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionIcon(System.String,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionIcon)" /> method provide a mechanism through which an add-in can register a form region and provide Outlook the XML manifest and the icons for the form region.</para>
              <para>If you would like an add-in to provide the XML manifest for a form region, specify the ProgID of the add-in when you register the form region in the Windows registry. For more information on registering a form region, see <a href="http://go.microsoft.com/fwlink/?LinkId=87933">Specifying Form Regions in the Windows Registry</a><b>GetFormRegionManifest</b> method of the  <b>FormRegionStartup</b> interface. Note that if you do not specify any ProgID in the Windows registry, Outlook will not call this method.</para>
              <para>Relying on an add-in to provide the XML manifest for a form region also means you are allowing the add-in to provide any icons for the form region. The add-in must also implement the <b>GetFormRegionIcon</b> of the <b>FormRegionStartup</b> interface. Outlook will call <b>GetFormRegionIcon</b> to obtain any add-in specified icons for the form region. For more information on using an add-in to specify icons, see <a href="http://go.microsoft.com/fwlink/?LinkId=87934">How to: Use an Add-in to Specify Icons for a Form Region</a></para>
              <para> When Outlook starts, it reads the list of form regions from the Windows registry and caches the data. Based on this data, if  Outlook notices that an add-in has been specified to provide the XML manifest for a form region, Outlook will use the ProgID provided in the cached data and call the <b>GetFormRegionManifest</b> method implemented by this add-in to obtain the XML it needs to display the form region. If the XML manifest is not valid and does not conform to the form region XML schema, Outlook will not be able to load the form region. Also, if you do not specify any ProgID in the Windows registry, Outlook will not call the  <b>GetFormRegionManifest</b> and <b>GetFormRegionIcon</b> methods.</para>
              <para>Outlook ignores the following elements when the add-in provides the XML manifest: </para>
              <list type="bullet">
                <item>
                  <para>name: Outlook ignores the value specified for this element and will  use the name  specified for the form region in the registry.</para>
                </item>
                <item>
                  <para>layoutFile: Outlook ignores this element because an add-in is extending this form region.</para>
                </item>
                <item>
                  <para>addin: Outlook uses the value that is preceded by an equal sign (=) in the registry as the ProgID of the add-in.</para>
                </item>
                <item>
                  <para>file attribute of stringOverride: Outlook ignores any secondary localization file specified by the stringOverride element. The add-in can implement <b>GetFormRegionManifest</b> to return inline the XML manifest for string localization for the specified <paramref name="LCID" />, or manage  string localization in another way, for example, using .NET Framework localization, and then return the appropriate XML manifest for the specified <paramref name="LCID" />.</para>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormRegionStorage">
      <MemberSignature Language="C#" Value="public object GetFormRegionStorage (string FormRegionName, object Item, int LCID, Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode, Microsoft.Office.Interop.Outlook.OlFormRegionSize FormRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormRegionStorage([in]string FormRegionName, [in]object Item, [in]int32 LCID, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode, [in]valuetype Microsoft.Office.Interop.Outlook.OlFormRegionSize FormRegionSize) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionStorage(System.String,System.Object,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionMode,Microsoft.Office.Interop.Outlook.OlFormRegionSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormRegionStorage (FormRegionName As String, Item As Object, LCID As Integer, FormRegionMode As OlFormRegionMode, FormRegionSize As OlFormRegionSize) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormRegionStorage(System::String ^ FormRegionName, System::Object ^ Item, int LCID, Microsoft::Office::Interop::Outlook::OlFormRegionMode FormRegionMode, Microsoft::Office::Interop::Outlook::OlFormRegionSize FormRegionSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64310)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormRegionName" Type="System.String" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="LCID" Type="System.Int32" />
        <Parameter Name="FormRegionMode" Type="Microsoft.Office.Interop.Outlook.OlFormRegionMode" />
        <Parameter Name="FormRegionSize" Type="Microsoft.Office.Interop.Outlook.OlFormRegionSize" />
      </Parameters>
      <Docs>
        <param name="FormRegionName">
          <span data-ttu-id="fb82b-124">Der interne Name der Formularregion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-124">The internal name of the form region.</span>
          </span>
          <span data-ttu-id="fb82b-125">Dies kann angegeben werden, indem die &lt;Namen&gt; Tag in das entsprechende Formularbereichmanifest XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-125">This can be indicated by the &lt;name&gt; tag in the corresponding form region XML manifest.</span>
          </span>
        </param>
        <param name="Item">
          <span data-ttu-id="fb82b-126">Das Outlook-Elementobjekt, mit dem das Laden des Formularbereichs verursacht wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-126">The Outlook item object that caused the loading of the form region.</span>
          </span>
        </param>
        <param name="LCID">
          <span data-ttu-id="fb82b-127">Die aktuelle Gebietsschema-ID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-127">The current locale ID.</span>
          </span>
        </param>
        <param name="FormRegionMode">
          <span data-ttu-id="fb82b-128">Der Modus, in den der Formularbereich geladen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-128">The mode that  the form region is being loaded into.</span>
          </span>
        </param>
        <param name="FormRegionSize">
          <span data-ttu-id="fb82b-129">Der Typ des Formularbereichs, der geladen wird, entweder angrenzend oder separat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-129">The type of form region being loaded, either adjoining or separate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb82b-130">Ruft auf Basis der angegebenen Informationen entsprechenden Speicher für einen Formularbereich ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-130">Obtains appropriate storage for a form region based on the specified information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb82b-131">Ein <b>Objekt</b> , das den Speicher darstellt wurde, die Outlook für den Formularbereich zugewiesen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-131">A <b>Object</b> representing the storage that Outlook has allocated for the form region.</span>
          </span>
          <span data-ttu-id="fb82b-132">Der Typ des Rückgabewerts kann sein: <b>String</b> (<b>Zeichenfolge</b> in c#) darstellt, dass der Rückgabewert ein lokaler Pfad zu einer Outlook Form Storage ist (. OFS)-Datei. <b>Zeichen</b> darstellt, die der Rückgabewert ist ein Array von Bytes, die den Inhalt des enthält die. OFS-Datei. <b>IStorage</b> darstellt, die ist der Rückgabewert ein COM-Speicherobjekt <b>IStorage</b> (für C++ nur); <b>Nothing</b> oder <b>Null</b>, darstellt, die Outlook konnte nicht Reservieren von Speicherplatz für diesen Formularbereich, und den Formularbereich wird nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-132">The type of the return value can be: <b>String</b> (<b>string</b> in C#) representing that the return value is a local path to an Outlook Form Storage (.OFS) file; <b>Byte()</b> representing that the return value is an array of bytes that contains the contents of the .OFS file; <b>IStorage</b> representing that the return value is a COM storage object <b>IStorage</b> (for C++ only); <b>Nothing</b> or <b>Null</b>, representing that Outlook could not allocate storage for this form region and will not load the form region.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="fb82b-133">
            <para>Das Add-in muss den Rückgabewert der <b>GetFormRegionStorage</b>überprüfen. Ein Formularbereich wird nicht geladen werden, wenn keines der folgenden True, wenn der zurückgegebene Speicher ist:</para>
            <list type="bullet">
              <item>
                <para>der zurückgegebene Speicher ist eine. OFS-Datei, die mit einem nicht lokalen Pfad angegeben</para>
              </item>
              <item>
                <para>Der zurückgegebene Speicher ist eine Datei jedoch kein. Gespeichert von im Formular-Designer OFS-Datei.</para>
              </item>
            </list>
            <para>Für Beispiele von Add-Ins in c# und Visual Basic .NET, mit denen implementiert die <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> Benutzeroberfläche, siehe Codebeispiel downloads auf MSDN.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fb82b-133">
              <para>The add-in must check for the return value of <b>GetFormRegionStorage</b>. A form region will not load if any of the following is true of the returned storage:</para>
              <list type="bullet">
                <item>
                  <para>The returned storage is a .OFS file specified with a non-local path.</para>
                </item>
                <item>
                  <para>The returned storage is a file but is not an .OFS file saved from the forms designer.</para>
                </item>
              </list>
              <para>For examples of add-ins in C# and  Visual Basic .NET that implement the <see cref="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" /> interface, see code sample downloads on MSDN.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>