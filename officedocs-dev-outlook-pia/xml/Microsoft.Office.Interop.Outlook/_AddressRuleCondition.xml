<Type Name="_AddressRuleCondition" FullName="Microsoft.Office.Interop.Outlook._AddressRuleCondition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="84f193c25f7f01534bbcd631f87bc3b9044e6e05" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20636367" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _AddressRuleCondition" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _AddressRuleCondition" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._AddressRuleCondition" />
  <TypeSignature Language="VB.NET" Value="Public Interface _AddressRuleCondition" />
  <TypeSignature Language="C++ CLI" Value="public interface class _AddressRuleCondition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000630FA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a9d9e-101">Dies ist eine primäre Schnittstelle in einem COM-Co-Klasse, die von verwaltetem Code für die Interoperabilität mit den entsprechenden COM-Objekt erforderlich ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9d9e-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="a9d9e-102">Verwenden Sie diese primäre Schnittstelle nur, wenn die Methode, den, die Sie verwenden möchten, den gleichen Namen wie die COM-Objekt gemeinsam verwendet. In diesem Fall dieser Schnittstelle zum Aufrufen der Methode umgewandelt, und in die neuesten Ereignisschnittstelle für die Verbindung an das Ereignis umgewandelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9d9e-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="a9d9e-103">Verwenden Sie andernfalls die .NET-Schnittstelle, die von der COM-Co-Klasse Zugriff auf Methoden, Eigenschaften und Ereignisse das COM-Objekt abgeleitet ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9d9e-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="a9d9e-104">Informationen über das COM-Objekt finden Sie unter <see cref="T:Microsoft.Office.Interop.Outlook.AddressRuleCondition" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9d9e-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.AddressRuleCondition" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public object Address { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Address" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._AddressRuleCondition.Address" />
      <MemberSignature Language="VB.NET" Value="Public Property Address As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Address { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64295)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9d9e-105">Zurück oder legt ein Array von <b>String</b> (<b>Zeichenfolge</b> in c#)-Elementen für die Adresse regelbedingung ausgewertet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-105">Returns or sets an array of <b>String</b> (<b>string</b> in C#) elements to evaluate the address rule condition.</span>
          </span>
          <span data-ttu-id="a9d9e-106">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-106">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a9d9e-107">
            <para>Sie ein Array mit einem Element für eine einzelne Adresse ausgewertet werden soll oder ein Array mit mehreren Zeichenfolgen, um mehrere Adressen auszuwerten zuweisen können. Mehrere Adresszeichenfolgen in einem Array zugewiesen werden mithilfe des logischen Operators OR ausgewertet.</para>
            <para>Falls eine durch <b>Address</b> angegebene Zeichenfolge in der Empfänger- oder Absenderadresse Adresse enthalten ist, wird die Bedingung mit <b>True</b>ausgewertet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-107">
              <para>You can assign an array with one element to evaluate a single address or an array of multiple strings to evaluate  multiple addresses. Multiple address strings assigned in an array are evaluated using the logical OR operation.</para>
              <para>If a string specified by   <b>Address</b> is contained in the recipient or sender address, the condition evaluates to <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._AddressRuleCondition.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9d9e-108">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> -Objekt, das das übergeordnete Outlook-Anwendung für das Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-108">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span>
          </span>
          <span data-ttu-id="a9d9e-109">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-109">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._AddressRuleCondition.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9d9e-110">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> Konstante, die die Klasse des Objekts angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-110">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span>
          </span>
          <span data-ttu-id="a9d9e-111">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-111">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlRuleConditionType ConditionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlRuleConditionType ConditionType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._AddressRuleCondition.ConditionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionType As OlRuleConditionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlRuleConditionType ConditionType { Microsoft::Office::Interop::Outlook::OlRuleConditionType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64298)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlRuleConditionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9d9e-112">Gibt eine Konstante aus der <see cref="T:Microsoft.Office.Interop.Outlook.OlRuleConditionType" /> -Enumeration, die den Typ des regelbedingung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-112">Returns a constant from the <see cref="T:Microsoft.Office.Interop.Outlook.OlRuleConditionType" /> enumeration that indicates the type of rule condition.</span>
          </span>
          <span data-ttu-id="a9d9e-113">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-113">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a9d9e-114">
            <para>Die <see cref="T:Microsoft.Office.Interop.Outlook.AddressRuleCondition" /> -Objekt wird durch Typen <b>OlRuleSend</b> und <b>OlRuleReceive</b>-Regeln verwendet. Wenn die Regel als eine Regel <b>OlRuleSend</b> erstellt wird, wird der Typ des zugeordneten <b>AddressRuleCondition</b> -Objekts <b>OlConditionSenderAddress</b>. Wenn die Regel als eine Regel <b>OlRuleReceive</b> erstellt wird, wird der Typ des zugeordneten <b>AddressRuleCondition</b> -Objekts <b>OlConditionRecipientAddress</b>. </para>
            <para>Dies bedeutet jedoch nicht, dass die Regel immer eine definierte regelbedingung für Adressen, die Absender oder Empfänger verwendet. Unabhängig davon, ob vorhanden ist eine solche definierten oder aktivierten regelbedingung wird die <b>AddressRuleCondition.ConditionType</b> -Eigenschaft immer initialisiert, nachdem die zugeordnete Regel erstellt wurde. Weitere Informationen zu regelbedingungen finden Sie unter <a href="http://go.microsoft.com/fwlink/?LinkId=87803">Angeben von Regelbedingungen</a></para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-114">
              <para>The <see cref="T:Microsoft.Office.Interop.Outlook.AddressRuleCondition" /> object is used by rules of types <b>olRuleSend</b> and <b>olRuleReceive</b>. If the rule is created as an <b>olRuleSend</b> rule, then the type of the associated <b>AddressRuleCondition</b> object will be <b>olConditionSenderAddress</b>. If the rule is created as an <b>olRuleReceive</b> rule, then the type of the associated <b>AddressRuleCondition</b> object will be <b>olConditionRecipientAddress</b>. </para>
              <para>This however does not mean that the rule always has a defined rule condition for sender or recipient addresses. Regardless of whether there exists such a defined or enabled rule condition, the <b>AddressRuleCondition.ConditionType</b> property is always initialized once the associated rule is created. For more information on rule conditions, see <a href="http://go.microsoft.com/fwlink/?LinkId=87803">Specifying Rule Conditions</a></para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._AddressRuleCondition.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9d9e-115">Zurückgeben oder Festlegen eines <b>booleschen</b> (<b>Bool</b> in c#), die bestimmt, ob die Regel aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-115">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that determines if the rule condition is enabled.</span>
          </span>
          <span data-ttu-id="a9d9e-116">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-116">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a9d9e-117">
            <para>Nachdem Sie eine Regel aktiviert haben, müssen Sie auch die Regel mithilfe von Speichern <see cref="M:Microsoft.Office.Interop.Outlook._Rules.Save(System.Object)" /> , damit die regelbedingung und deren aktivierter Status über die aktuelle Sitzung beibehalten werden.  Eine Regel wird erst aktiviert, nachdem es erfolgreich gespeichert wurde.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-117">
              <para>After you enable a rule condition, you must also save the rule by using <see cref="M:Microsoft.Office.Interop.Outlook._Rules.Save(System.Object)" /> so that the rule  condition and its enabled state will persist beyond the current session.  A rule condition is only enabled after it have been saved successfully.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._AddressRuleCondition.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9d9e-p107">Gibt das übergeordnete <b>Objekt</b> des angegebenen Objekts zurück. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-p107">Returns the parent <b>Object</b> of the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a9d9e-120">
            <para>Das übergeordnete Objekt ist die <see cref="T:Microsoft.Office.Interop.Outlook.RuleCondition" /> Objekt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-120">
              <para>The parent object is the <see cref="T:Microsoft.Office.Interop.Outlook.RuleCondition" /> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._AddressRuleCondition.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9d9e-121">Gibt die <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> -Objekt für die aktuelle Sitzung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-121">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span>
          </span>
          <span data-ttu-id="a9d9e-122">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-122">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a9d9e-123">
            <para>Die <b>Session</b> -Eigenschaft und die <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> -Methode kann austauschbar verwendet werden, um das <b>NameSpace</b> -Objekt für die aktuelle Sitzung abzurufen. Beide Member haben denselben Zweck. Führen Sie die folgenden Paare von Anweisungen beispielsweise die gleiche Funktion:</para>
            <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
            <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
            <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
            <code>Outlook.NameSpace objSession = Application.Session;</code>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a9d9e-123">
              <para>The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session. Both members serve the same purpose. For example, the following pairs of statements perform the same function:</para>
              <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
              <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
              <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
              <code>Outlook.NameSpace objSession = Application.Session;</code>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>