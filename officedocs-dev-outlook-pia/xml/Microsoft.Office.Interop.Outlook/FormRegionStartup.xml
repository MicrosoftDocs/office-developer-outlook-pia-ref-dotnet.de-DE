<Type Name="FormRegionStartup" FullName="Microsoft.Office.Interop.Outlook.FormRegionStartup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75a9b2ad694849b28efb9d70e2610a95ab5912e0" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20636497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface FormRegionStartup : Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract FormRegionStartup implements class Microsoft.Office.Interop.Outlook._FormRegionStartup" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook.FormRegionStartup" />
  <TypeSignature Language="VB.NET" Value="Public Interface FormRegionStartup&#xA;Implements _FormRegionStartup" />
  <TypeSignature Language="C++ CLI" Value="public interface class FormRegionStartup : Microsoft::Office::Interop::Outlook::_FormRegionStartup" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Outlook._FormRegionStartup</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Outlook.FormRegionStartupClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00063059-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c3c49-101">Definiert eine Schnittstelle, die einem Add-In das Angeben des Speichers und der Benutzeroberfläche eines Formularbereichs erlaubt, ruft ein Objekt für diesen Formularbereich ab und bestimmt, wann der Formularbereich in einem Formular oder im Lesebereich angezeigt wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3c49-101">Defines an interface that allows an add-in to specify the storage and the user interface of a form region, obtains an object for that form region, and determines when the form region is about to be displayed in a form or in the Reading Pane.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="c3c49-102">
        <para>Dies ist ein .NET-Schnittstelle abgeleitet eine COM-Co-Klasse, die von verwaltetem Code für die Interoperabilität mit den entsprechenden COM-Objekt erforderlich ist. Verwenden Sie diese abgeleiteten Schnittstelle, um alle-Methode, -Eigenschaft und Ereignismember des COM-Objekts zuzugreifen. Jedoch, wenn eine Methode oder ein Ereignis, den Sie verwenden möchten, den gleichen Namen unter dem gleichen COM-Objekt gemeinsam, wandeln Sie auf die entsprechende primäre Schnittstelle, rufen Sie die Methode und die neuesten Ereignisse Benutzeroberfläche für die Verbindung an das Ereignis umgewandelt. Verweisen Sie auf dieses Thema bietet Informationen über das COM-Objekt. Informationen zu den Methoden- und Membern des COM-Objekts finden Sie unter <see cref="T:Microsoft.Office.Interop.Outlook._FormRegionStartup" />. </para>
        <para>Die <b>FormRegionStartup</b> -Schnittstelle ist eine abstrakte Klasse, was bedeutet, dass es nicht direkt instanziiert werden kann. In Visual Basic können Sie die <b>Implements</b> -Schlüsselworts Sie die Methoden des <b>FormRegionStartup</b> in Ihrer Add-in-Klasse wie folgt bereitstellen:</para>
        <code>Implements Outlook._FormRegionStartup.BeforeFormRegionShow</code>
        <para>ein Add-in Bereitstellen eines Formularbereichs in einem Outlook-Formular auf einem Client-Computer muss die <b>implementieren FormRegionStartup</b> Schnittstelle besteht aus den zwei Methoden <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.BeforeFormRegionShow(Microsoft.Office.Interop.Outlook.FormRegion)" /> und <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionStorage(System.String,System.Object,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionMode,Microsoft.Office.Interop.Outlook.OlFormRegionSize)" />. Wenn Outlook das Add-In geladen wird, fragt Outlook die <b>IDTExtensibility2</b> -Schnittstelle für <b>FormRegionStartup</b>. </para>
        <para>Das Add-in der Datei Speicher- und Layoutdatei für den Formularbereich in <b>GetFormRegionStorage</b>angibt. Durch Aufrufen von <b>GetFormRegionStorage</b>, Outlook weist Speicher und berechnet das Layout für den Formularbereich, instanziiert ein Objekt für den Formularbereich und gibt einen Wert zurück, den für das Add-in reservierten Speicher darstellt. Wenn <b>GetFormRegionStorage</b> erfolgreich ist, unmittelbar bevor der Formularbereich in einem Inspektor-Fenster oder im Lesebereich angezeigt wird Outlook <b>BeforeFormRegionShow</b> aufrufen und übergeben Sie die <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> Objekt des Formularbereichs, der das Add-in. Das Add-in verwendet diese Gelegenheit nutzen, bevor der Formularbereich angezeigt wird, um alle Steuerelemente im Formularbereich zu aktualisieren. </para>
        <para>Wenn das Add-in den Rahmen für den Formularbereich geschlossen wird, das Add-in muss das Objekt frei für den Formularbereich.</para>
        <para>Weitere Informationen zum Schreiben von Add-Ins für Formularbereiche finden Sie unter <a href="http://go.microsoft.com/fwlink/?LinkId=87930">Erweitern eines Formularbereichs mithilfe eines Add-Ins</a><b>FormRegionStartup</b>finden Sie downloads von Codebeispielen auf MSDN.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c3c49-102">
          <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook._FormRegionStartup" />. </para>
          <para>The <b>FormRegionStartup</b> interface is an abstract class, which means that it cannot be instantiated directly. In Visual Basic, you can use the <b>Implements</b> keyword to provide the methods of  <b>FormRegionStartup</b> in your add-in class as follows:</para>
          <code>Implements Outlook._FormRegionStartup.BeforeFormRegionShow</code>
          <para>An add-in deploying a form region in an Outlook form on a client computer must implement the <b>FormRegionStartup</b> interface which consists of the two methods,   <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.BeforeFormRegionShow(Microsoft.Office.Interop.Outlook.FormRegion)" /> and <see cref="M:Microsoft.Office.Interop.Outlook._FormRegionStartup.GetFormRegionStorage(System.String,System.Object,System.Int32,Microsoft.Office.Interop.Outlook.OlFormRegionMode,Microsoft.Office.Interop.Outlook.OlFormRegionSize)" />. When Outlook loads the add-in, Outlook queries the <b>IDTExtensibility2</b> interface for <b>FormRegionStartup</b>. </para>
          <para>The add-in indicates the storage and layout file for the form region  in <b>GetFormRegionStorage</b>. By calling <b>GetFormRegionStorage</b>, Outlook allocates storage and calculates the layout for the form region, instantiates an object for the form region, and returns a value representing the storage allocated to the add-in. If <b>GetFormRegionStorage</b> is successful, just before the form region is displayed in an Inspector window or in the Reading Pane, Outlook will call <b>BeforeFormRegionShow</b> and pass the <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> object of the form region to the add-in. The add-in uses this opportunity before the form region is displayed to update any controls  in the form region. </para>
          <para>When the add-in closes the frame for the form region, the add-in must release the object for the form region.</para>
          <para>For more information on writing add-ins for form regions, see <a href="http://go.microsoft.com/fwlink/?LinkId=87930">Extending a Form Region with an Add-in</a><b>FormRegionStartup</b>, see code sample downloads on MSDN.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members />
</Type>