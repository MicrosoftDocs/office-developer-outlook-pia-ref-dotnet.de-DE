<Type Name="_FormRegion" FullName="Microsoft.Office.Interop.Outlook._FormRegion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f5e36d15647c1ebf020041822306c7c220b912e" /><Meta Name="ms.sourcegitcommit" Value="edbc1e709f796342c771b5226636c7e9dde40a82" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/25/2021" /><Meta Name="ms.locfileid" Value="53139677" /></Metadata><TypeSignature Language="C#" Value="public interface _FormRegion" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FormRegion" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._FormRegion" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FormRegion" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FormRegion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0006305A-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="494fc-101">Hierbei handelt es sich um eine primäre Schnittstelle in einer COM-CoClass, die von verwaltetem Code benötigt wird, um Interoperabilität mit dem entsprechenden COM-Objekt sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="494fc-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="494fc-102">Verwenden Sie diese primäre Schnittstelle nur, wenn die Methode, die Sie verwenden möchten, den gleichen Namen aufweist wie ein Ereignis des COM-Objekts; casten Sie in diesem Fall zu dieser Schnittstelle, um die Methode aufzurufen, und casten Sie zur aktuellen Ereignisschnittstelle, um eine Verbindung zum Ereignis herzustellen.</span><span class="sxs-lookup"><span data-stu-id="494fc-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="494fc-103">Verwenden Sie andernfalls die von der COM-CoClass abgeleitete .NET-Schnittstelle, um auf Methoden, Eigenschaften und Ereignisse des COM-Objekts zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="494fc-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="494fc-104">Informationen zum COM-Objekt finden Sie unter <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> .</span><span class="sxs-lookup"><span data-stu-id="494fc-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-105">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> Objekt zurück, das das übergeordnete Outlook Anwendung für das Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="494fc-105">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span></span> <span data-ttu-id="494fc-106">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-106">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-107">Gibt eine <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> Konstante zurück, die die Klasse des Objekts angibt.</span><span class="sxs-lookup"><span data-stu-id="494fc-107">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span></span> <span data-ttu-id="494fc-108">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-108">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Property Detail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Detail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-109">Zurückgeben oder Festlegen einer <b>Zeichenfolge</b> (<b>Zeichenfolge</b> in C#), die den Zur Laufzeit in der Kopfzeile nach dem Anzeigenamen eines angrenzenden Formularbereichs angezeigten Text darstellt.</span><span class="sxs-lookup"><span data-stu-id="494fc-109">Returns or sets a <b>String</b> (<b>string</b> in C#) representing the text displayed at runtime in the header after the display name of an adjoining form region.</span></span> <span data-ttu-id="494fc-110">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="494fc-110">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="494fc-p105">Die <b>Detail</b> -Eigenschaft wird für angrenzende Formularbereiche nur angezeigt. Es wird bei separaten Formularbereichen ignoriert.</span><span class="sxs-lookup"><span data-stu-id="494fc-p105">The <b>Detail</b> property is displayed for adjoining form regions only. It is ignored for separate form regions.</span></span></para>
          <para><span data-ttu-id="494fc-p106">Die <b>Detail</b> -Eigenschaft ist für einen angrenzenden Formularbereich optional.</span><span class="sxs-lookup"><span data-stu-id="494fc-p106">The <b>Detail</b> property is optional for an adjoining form region. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-114">Gibt eine <b>Zeichenfolge</b> (<b>Zeichenfolge</b> in C#) zurück, die den Anzeigenamen des Formularbereichs darstellt.</span><span class="sxs-lookup"><span data-stu-id="494fc-114">Returns a <b>String</b> (<b>string</b> in C#) representing the display name of the form region.</span></span> <span data-ttu-id="494fc-115">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-115">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="494fc-116">The display name is optional for a form region.</span><span class="sxs-lookup"><span data-stu-id="494fc-116">The display name is optional for a form region.</span></span> <span data-ttu-id="494fc-117">Wenn Sie einen Wert für das &lt; &gt; formRegionName-Tag in der entsprechenden XML-Datei des Formularbereichmanifests definiert haben, wird dieser Wert dem Wert der <b>DisplayName-Eigenschaft</b> zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="494fc-117">If you have defined a value for the &lt;formRegionName&gt; tag in the corresponding form region manifest XML file, this value will map to the value of the <b>DisplayName</b> property.</span></span> <span data-ttu-id="494fc-118">Weitere Informationen zum XML-Schema für Formularbereiche finden Sie in der Microsoft Outlook 2010 XML-Schemareferenz in der <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library.</a></span><span class="sxs-lookup"><span data-stu-id="494fc-118">For more information on the XML schema for form regions, see the Microsoft Outlook 2010 XML Schema Reference in the <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></span></span></para>
          <para><span data-ttu-id="494fc-119">Der Wert der <b>DisplayName-Eigenschaft</b> wird zur Laufzeit auf der Registerkarte "Anzeigen" des menübands Microsoft Office Fluent für einen separaten Formularbereich oder in der Kopfzeile eines angrenzenden Formularbereichs angezeigt.</span><span class="sxs-lookup"><span data-stu-id="494fc-119">The value of the <b>DisplayName</b> property is displayed at runtime in the Show tab of the Microsoft Office Fluent ribbon for a separate form region, or in the header of an adjoining form region.</span></span>  <span data-ttu-id="494fc-120">Es wird für das Standardgebietsschema verwendet und kann vom &lt; stringOverride-Tag &gt; in der entsprechenden XML-Datei des Formularbereichmanifests überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="494fc-120">It is used for the default locale, and can be overridden by the &lt;stringOverride&gt; tag in the corresponding form region manifest XML file.</span></span> <span data-ttu-id="494fc-121">Die Zeichenfolge wird Groß-/Kleinschreibung unterschieden, und die maximale Länge beträgt 256 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="494fc-121">The string is case-insensitive, and its maximum length is 256 characters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoLayout">
      <MemberSignature Language="C#" Value="public bool EnableAutoLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.EnableAutoLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-122">Dient zum Zurückgeben oder Festlegen eines Werts vom Typ <b>Boolean</b> (<b>bool</b> in C#), der angibt, ob beim Entwerfen von Formularbereichen im Formular-Designer das Feature zur automatischen Layoutänderung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="494fc-122">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether to use the automatic layout resizing feature when designing form regions in the forms designer.</span></span> <span data-ttu-id="494fc-123">Lesen/Schreiben</span><span class="sxs-lookup"><span data-stu-id="494fc-123">Read/write</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="494fc-p111">Die automatische Layoutfunktion zur Größenänderung im Formular-Designer berechnet das Formularlayout dynamisch neu, während die Größe des Formulars geändert wird. Diese Funktion ist nur für Formularbereiche im Formular-Designer verfügbar.</span><span class="sxs-lookup"><span data-stu-id="494fc-p111">The automatic layout resizing feature in the forms designer recalculates the form layout dynamically as the form is resized. This feature is only available to form regions in the forms designer.</span></span></para>
          <para><span data-ttu-id="494fc-126">Wenn diese Eigenschaft auf <b>True</b> festgelegt ist, führt im Formular-Designer mit der automatischen Layouts ändern der Größe.</span><span class="sxs-lookup"><span data-stu-id="494fc-126">When this property is <b>True</b>, the forms designer performs automatic layout resizing.</span></span>  <span data-ttu-id="494fc-127">Wenn diese Eigenschaft auf <b>False</b> festgelegt ist, wird im Formular-Designer keine automatische Layout Ändern der Größe von durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="494fc-127">When this property is <b>False</b>, the forms designer does not perform automatic layout resizing.</span></span>  <span data-ttu-id="494fc-128">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="494fc-128">The default value is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public object Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Form" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Form { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64313)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-p113">Gibt ein <b>Objekt</b> zurück, das <b>MSForms.UserForm</b> -Objekt darstellt. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-p113">Returns an <b>Object</b> representing the <b>MSForms.UserForm</b> object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormRegionMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.FormRegionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormRegionMode As OlFormRegionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlFormRegionMode FormRegionMode { Microsoft::Office::Interop::Outlook::OlFormRegionMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlFormRegionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-p114">Gibt eine <b>OlFormRegionMode</b> -Konstante, die angibt, ob der Formularbereich in einer Leseseite befindet, Verfassenlayout oder einem Lesebereich. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-p114">Returns an <b>OlFormRegionMode</b> constant that indicates whether the form region is in a read page, compose page, or Reading Pane. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="494fc-133">Wenn der Benutzer ein E-Mail-Element im Lesebereich hat, können Sie mithilfe der <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Sent" /> Eigenschaft weiter ermitteln, ob sich der Benutzer im Bearbeitungsmodus oder im Lesemodus des Lesebereichs befindet.</span><span class="sxs-lookup"><span data-stu-id="494fc-133">If the user has a mail item in the Reading Pane, you can use the <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Sent" /> property to further determine if the user is in the edit mode or the read mode of the Reading Pane.</span></span> <span data-ttu-id="494fc-134">A mail item is displayed differently in the Reading Pane if it is in the edit mode (the mail item is in the Draft folder) than if it is in the read mode (the mail item is in the Inbox or Sent folder).</span><span class="sxs-lookup"><span data-stu-id="494fc-134">A mail item is displayed differently in the Reading Pane if it is in the edit mode (the mail item is in the Draft folder) than if it is in the read mode (the mail item is in the Inbox or Sent folder).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Inspector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Inspector Inspector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Inspector Inspector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Inspector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Inspector As Inspector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Inspector ^ Inspector { Microsoft::Office::Interop::Outlook::Inspector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Inspector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-135">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> Objekt zurück, das den Inspector darstellt, der den Formularbereich hostet.</span><span class="sxs-lookup"><span data-stu-id="494fc-135">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> object representing the Inspector that hosts the form region.</span></span> <span data-ttu-id="494fc-136">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-136">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="494fc-137">Gibt <b>Nothing</b> (einen Nullverweis (Nothing in Visual Basic) in C# zurück, wenn der Formularbereich im Lesebereich angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="494fc-137">Returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) if the form region is displayed in the Reading Pane.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalName">
      <MemberSignature Language="C#" Value="public string InternalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-138">Gibt eine <b>Zeichenfolge</b> (<b>Zeichenfolge</b> in C#), die den internen programmgesteuerten Namen des Formularbereichs wie im Manifest für den Formularbereich definiert darstellt.</span><span class="sxs-lookup"><span data-stu-id="494fc-138">Returns a <b>String</b> (<b>string</b> in C#) that represents the internal programmatic name of the form region as defined in the manifest for the form region.</span></span> <span data-ttu-id="494fc-139">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-139">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="494fc-140">The internal name is required for a form region.</span><span class="sxs-lookup"><span data-stu-id="494fc-140">The internal name is required for a form region.</span></span> <span data-ttu-id="494fc-141">Das &lt; &gt; Namenstag in der entsprechenden XML-Datei des Formularbereichmanifests ist dem Wert der <b>InternalName-Eigenschaft</b> zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="494fc-141">The &lt;name&gt; tag in the corresponding form region manifest XML file maps to the value of the <b>InternalName</b> property.</span></span> <span data-ttu-id="494fc-142">Weitere Informationen zum XML-Schema für Formularbereiche finden Sie in der Microsoft Outlook 2010 XML-Schemareferenz in der <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library.</a></span><span class="sxs-lookup"><span data-stu-id="494fc-142">For more information on the XML schema for form regions, see the Microsoft Outlook 2010 XML Schema Reference in the <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></span></span></para>
          <para><span data-ttu-id="494fc-p119">Der Wert der <b>InternalName</b> -Eigenschaft wird von der Add-in oder Microsoft Outlook verwendet, beispielsweise verweisen auf den Formularbereich, um zu bestimmen, welcher Formularbereich geladen wird oder zum Laden von Zeichenfolgen aus den Ressourcen lokalisierte Zeichenfolge. <b>InternalName</b> -Eigenschaft unterstützt nur ASCII-Zeichen. Die Zeichenfolge wird Groß-/Kleinschreibung unterschieden, und die maximale Länge beträgt 256 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="494fc-p119">The value of the <b>InternalName</b> property is used by the add-in or Microsoft Outlook to refer to the form region, for example, to determine which form region is being loaded or to load strings from the localized string resources. The <b>InternalName</b> property supports only ASCII characters. The string is case-insensitive, and its maximum length is 256 characters.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64312)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-146">Gibt einen <b>Booleschen</b> Wert (<b>Bool</b> in C#), der angibt, ob der Formularbereich erweitert wird.</span><span class="sxs-lookup"><span data-stu-id="494fc-146">Returns a <b>Boolean</b> (<b>bool</b> in C#) that indicates if the form region is expanded.</span></span> <span data-ttu-id="494fc-147">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-147">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="494fc-148">Diese Eigenschaft gilt nur für angrenzende Formularbereiche und wird bei separaten Formularbereichen ignoriert.</span><span class="sxs-lookup"><span data-stu-id="494fc-148">This property applies to adjoining form regions only and is ignored for separate form regions.</span></span></para>
          <para><span data-ttu-id="494fc-149">Outlook wird immer zuerst lädt ein Formularbereichs im erweiterten Zustand und <b>IsExpanded</b> auf <b>True</b> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="494fc-149">Outlook always first loads a form region in an expanded state and sets <b>IsExpanded</b> to <b>True</b>.</span></span> <span data-ttu-id="494fc-150">Wenn der anfängliche Status des Formularbereichs reduziert werden soll, schließt Outlook sofort den Formularbereich, löst das <see cref="E:Microsoft.Office.Interop.Outlook.FormRegionEvents_Event.Expanded" /> Ereignis mit dem Parameter <paramref name="Expand" /> <b>False</b>aus und legt <b>IsExpanded</b> auf <b>False</b>fest.</span><span class="sxs-lookup"><span data-stu-id="494fc-150">If the initial state of the form region is to be collapsed, then Outlook immediately closes the form region, fires the <see cref="E:Microsoft.Office.Interop.Outlook.FormRegionEvents_Event.Expanded" /> event with the <paramref name="Expand" /> parameter being <b>False</b>, and sets  <b>IsExpanded</b> to <b>False</b>.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64096)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-p122">Gibt ein <b>Objekt</b>, das an den Formularbereich gebunden Outlook-Element entspricht. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-p122">Returns an <b>Object</b> corresponding to the Outlook item bound to the form region. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public int Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Language { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-153">Gibt einen <b>Integer</b> -Wert (<b>int</b> in C#) zurück, der die LCID für die aktuelle Sprache angibt.</span><span class="sxs-lookup"><span data-stu-id="494fc-153">Returns an <b>Integer</b> (<b>int</b> in C#) value that indicates the LCID for the current language.</span></span> <span data-ttu-id="494fc-154">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-154">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-p124">Gibt das übergeordnete <b>Objekt</b> des Formularbereichs zurück. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-p124">Returns the parent <b>Object</b> of the form region. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflow">
      <MemberSignature Language="C#" Value="public void Reflow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reflow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.Reflow" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reflow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reflow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64315)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="494fc-157">Zwingt Outlook, die Höhe eines angrenzenden Formularbereichs neu zu berechnen, um alle sichtbaren Steuerelemente im Formularbereich anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="494fc-157">Causes Outlook to recalculate the height of an adjoining form region to display all  the visible controls in the form region.</span></span></summary>
        <remarks><para><span data-ttu-id="494fc-p125">Die <b>Reflow</b> -Methode gilt nur für angrenzende Formularbereiche. Keine Aktion ausgeführt wird bei separaten Formularbereichen.</span><span class="sxs-lookup"><span data-stu-id="494fc-p125">The <b>Reflow</b> method only applies to adjoining form regions. No action occurs for separate form regions.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="494fc-160">Aktiviert den Formularbereich, sodass er angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="494fc-160">Makes the form region the active form region such that it becomes visible.</span></span></summary>
        <remarks><para><span data-ttu-id="494fc-161">Wenn der Formularbereich ein angrenzender Formularbereich befindet, klicken Sie dann <b>Wählen Sie</b> wird erweitern Sie den Formularbereich (sofern er nicht bereits erweitert ist) und setzen Sie den Fokus auf das erste Steuerelement auf der Seite.</span><span class="sxs-lookup"><span data-stu-id="494fc-161">If the form region is an adjoining form region, then <b>Select</b> will expand the form region (if it is not already expanded) and set focus on the first control on that page.</span></span> <span data-ttu-id="494fc-162">Wenn der Formularbereich ein separater Formularbereich ist und <b></b> nicht bereits die aktive Seite ist, wechselt Select zur Formularbereichsseite und legt den Fokus auf das erste Steuerelement auf dieser Seite fest.</span><span class="sxs-lookup"><span data-stu-id="494fc-162">If the form region is a separate form region and is not already the active page, then <b>Select</b> will switch to the form region page and set focus on the first control on that page.</span></span> <span data-ttu-id="494fc-163">Wenn der Formularbereich ein separater Formularbereich ist und bereits dem aktiven Zeichenblatt, passiert dann nichts.</span><span class="sxs-lookup"><span data-stu-id="494fc-163">If the form region is a separate form region and is already the active page, then nothing happens.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-164">Gibt das <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  Objekt für die aktuelle Sitzung zurück.</span><span class="sxs-lookup"><span data-stu-id="494fc-164">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span></span> <span data-ttu-id="494fc-165">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="494fc-165">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="494fc-166">Die <b>Session-Eigenschaft</b> und die <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> Methode können synonym verwendet werden, um das <b>NameSpace-Objekt</b> für die aktuelle Sitzung abzurufen.</span><span class="sxs-lookup"><span data-stu-id="494fc-166">The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session.</span></span> <span data-ttu-id="494fc-167">Beide Member haben denselben Zweck.</span><span class="sxs-lookup"><span data-stu-id="494fc-167">Both members serve the same purpose.</span></span> <span data-ttu-id="494fc-168">Die folgenden Anweisungspaare führen z. B. dieselbe Funktion aus:</span><span class="sxs-lookup"><span data-stu-id="494fc-168">For example, the following pairs of statements perform the same function:</span></span></para>
          <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
          <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
          <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
          <code>Outlook.NameSpace objSession = Application.Session;</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetControlItemProperty">
      <MemberSignature Language="C#" Value="public void SetControlItemProperty (object Control, string PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetControlItemProperty([in]object Control, [in]string PropertyName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.SetControlItemProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetControlItemProperty (Control As Object, PropertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetControlItemProperty(System::Object ^ Control, System::String ^ PropertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Object" />
        <Parameter Name="PropertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Control"><span data-ttu-id="494fc-169">Ein Steuerelement im Formularbereich, an das die angegebene Eigenschaft <paramref name="PropertyName" /> gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="494fc-169">A control in the form region to which the property specified by <paramref name="PropertyName" /> will be bound.</span></span></param>
        <param name="PropertyName"><span data-ttu-id="494fc-170">Der Name der Eigenschaft, die an das Steuerelement gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="494fc-170">The name of the property that will be bound to the control.</span></span></param>
        <summary><span data-ttu-id="494fc-171">Bindet eine explizite integrierte Eigenschaft oder benutzerdefinierte Eigenschaft an ein Steuerelement im Formularbereich.</span><span class="sxs-lookup"><span data-stu-id="494fc-171">Binds an explicit  built-in property or a custom property to a control in the form region.</span></span></summary>
        <remarks><para><span data-ttu-id="494fc-p129">Mit dieser Methode können Sie eine explizite integrierte Eigenschaft oder eine benutzerdefinierte Eigenschaft an ein Steuerelement gebunden werden. Sie müssen die-Eigenschaft von Zeichenfolgennamens, beispielsweise <b>Betreff</b>, und nicht von Namespace, beispielsweise http://schemas.microsoft.com/mapi/proptag/0x0037001E verweisen.</span><span class="sxs-lookup"><span data-stu-id="494fc-p129">You can use this method to bind an explicit built-in property or a custom property to a control. You must reference the property by its string name, for example, <b>Subject</b>, and not by namespace, for example, http://schemas.microsoft.com/mapi/proptag/0x0037001E.</span></span></para>
          <para><span data-ttu-id="494fc-174">Bei dem <paramref name="PropertyName" /> Parameter wird die Groß-/Kleinschreibung nicht beachtet.</span><span class="sxs-lookup"><span data-stu-id="494fc-174">The <paramref name="PropertyName" /> parameter is not case-sensitive.</span></span> <span data-ttu-id="494fc-175">Beispielsweise interpretiert <b>SetControlItemProperty</b> ein Argument, <b>CustomerId,</b>als identisch mit <b>CustomerID</b> und bindet das angegebene Steuerelement an die integrierte <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CustomerID" /> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="494fc-175">For example, <b>SetControlItemProperty</b> interprets an argument, <b>CustomerId</b>, to be the same as <b>CustomerID</b> and binds the specified control to the built-in <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CustomerID" /> property.</span></span></para>
          <para><span data-ttu-id="494fc-176">Abgesehen von der Verwendung der <b>SetControlItemProperty-Methode</b> eines <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> Objekts können Sie auch Code wie den folgenden verwenden, um eine Eigenschaft wie die  <b>Subject-Eigenschaft</b> an ein Steuerelement zu binden:</span><span class="sxs-lookup"><span data-stu-id="494fc-176">Other than using the <b>SetControlItemProperty</b> method of a <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> object, you can also use code similar to the following to bind a property such as the  <b>Subject</b> property to a control:</span></span></para>
          <code>myPage.Controls("bar").ItemProperty = "subject"</code>
          <code>myPage.Controls("bar").ItemProperty = "subject";</code>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressControlReplacement">
      <MemberSignature Language="C#" Value="public bool SuppressControlReplacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressControlReplacement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.SuppressControlReplacement" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressControlReplacement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressControlReplacement { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-177">Dient zum Zurückgeben oder Festlegen eines Werts vom Typ <b>Boolean</b> (<b>bool</b> in C#), der verhindert, dass Outlook ein Forms 2.0-Steuerelement zur Entwurfszeit und Laufzeit automatisch durch ein designiertes Outlook-Steuerelement ersetzt.</span><span class="sxs-lookup"><span data-stu-id="494fc-177">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that disables Outlook from automatically replacing  a Forms 2.0 control by  a themed Outlook control at design time and runtime.</span></span> <span data-ttu-id="494fc-178">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="494fc-178">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="494fc-179">Weitere Informationen zu Outlook, die ein Forms 2.0-Steuerelement automatisch durch ein designiertes Outlook Gegensteuerelement ersetzen, finden Sie unter <a href="http://go.microsoft.com/fwlink/?LinkId=87823">"Steuerelemente in einem benutzerdefinierten Formular".</a></span><span class="sxs-lookup"><span data-stu-id="494fc-179">For more information on Outlook automatically replacing a Forms 2.0 control by  a themed Outlook counterpart control, see <a href="http://go.microsoft.com/fwlink/?LinkId=87823">Controls in a Custom Form</a></span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="494fc-180">Gibt zurück oder legt einen <see cref="T:System.Boolean" /> (<b>Bool</b> für C#) Wert, der angibt, ob der Formularbereich sichtbar oder ausgeblendet ist.</span><span class="sxs-lookup"><span data-stu-id="494fc-180">Returns or sets a <see cref="T:System.Boolean" /> (<b>bool</b> for C#) value that indicates whether the form region is visible or hidden.</span></span> <span data-ttu-id="494fc-181">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="494fc-181">Read/write.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="494fc-p133">
            <b>True,</b> Wenn der Formularbereich angezeigt wird. <b>False,</b> Wenn es ausgeblendet ist. Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="494fc-p133">
            <b>True</b> if the form region is visible; <b>False</b> if it is hidden. The default is <b>True</b>. </span></span></para>
          <para><span data-ttu-id="494fc-184">Verwenden Sie die <b>Visible</b> -Eigenschaft, um Zugriff auf Informationen zu steuern, ohne es in einem Formularbereich anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="494fc-184">Use the <b>Visible</b> property to control access to information without displaying it in a form region.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
