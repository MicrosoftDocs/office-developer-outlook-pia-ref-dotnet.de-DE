<Type Name="_FormRegion" FullName="Microsoft.Office.Interop.Outlook._FormRegion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="170a1d134f5a487d0a43dde3247d20e4b029e8bb" />
    <Meta Name="ms.sourcegitcommit" Value="372abf58b21f4fab503d106f0e8c8a2ac45f9332" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20635925" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _FormRegion" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FormRegion" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Outlook._FormRegion" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FormRegion" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FormRegion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0006305A-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eda8d-101">Dies ist eine primäre Schnittstelle in einem COM-Co-Klasse, die von verwaltetem Code für die Interoperabilität mit den entsprechenden COM-Objekt erforderlich ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eda8d-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="eda8d-102">Verwenden Sie diese primäre Schnittstelle nur, wenn die Methode, den, die Sie verwenden möchten, den gleichen Namen wie die COM-Objekt gemeinsam verwendet. In diesem Fall dieser Schnittstelle zum Aufrufen der Methode umgewandelt, und in die neuesten Ereignisschnittstelle für die Verbindung an das Ereignis umgewandelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eda8d-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="eda8d-103">Verwenden Sie andernfalls die .NET-Schnittstelle, die von der COM-Co-Klasse Zugriff auf Methoden, Eigenschaften und Ereignisse das COM-Objekt abgeleitet ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eda8d-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="eda8d-104">Informationen über das COM-Objekt finden Sie unter <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eda8d-104">For information about the COM object, see <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Application ^ Application { Microsoft::Office::Interop::Outlook::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-105">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.Application" /> -Objekt, das das übergeordnete Outlook-Anwendung für das Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-105">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Application" />  object that represents the parent Outlook application for the  object.</span>
          </span>
          <span data-ttu-id="eda8d-106">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-106">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlObjectClass Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlObjectClass Class" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As OlObjectClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlObjectClass Class { Microsoft::Office::Interop::Outlook::OlObjectClass get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlObjectClass</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-107">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> Konstante, die die Klasse des Objekts angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-107">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.OlObjectClass" /> constant indicating the object's class.</span>
          </span>
          <span data-ttu-id="eda8d-108">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-108">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Property Detail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Detail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64309)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-109">
            <b>String</b> (<b>Zeichenfolge</b> in c#) zurückgegeben oder festgelegt, den zur Laufzeit in der Kopfzeile nach dem Anzeigenamen eines angrenzenden Formularbereichs angezeigten Text darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-109">Returns or sets a <b>String</b> (<b>string</b> in C#) representing the text displayed at runtime in the header after the display name of an adjoining form region.</span>
          </span>
          <span data-ttu-id="eda8d-110">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-110">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eda8d-111">
            <para>Die <b>Detail</b> -Eigenschaft wird für angrenzende Formularbereiche nur angezeigt. Es wird bei separaten Formularbereichen ignoriert.</para>
            <para>
              <b>Detail</b> -Eigenschaft ist für einen angrenzenden Formularbereich optional.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-111">
              <para>The <b>Detail</b> property is displayed for adjoining form regions only. It is ignored for separate form regions.</para>
              <para>The <b>Detail</b> property is optional for an adjoining form region. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(12289)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-112">Gibt eine <b>Zeichenfolge</b> (<b>String</b> in c#) zurück, der den Anzeigenamen des Formularbereichs darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-112">Returns a <b>String</b> (<b>string</b> in C#) representing the display name of the form region.</span>
          </span>
          <span data-ttu-id="eda8d-113">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-113">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eda8d-114">
            <para>Der Anzeigename ist für einen Formularbereich optional. Wenn Sie einen Wert für definiert haben die &lt;FormRegionName&gt; Tag in der entsprechenden Formular Region XML-Manifestdatei, dieser Wert wird auf den Wert der die <b>DisplayName</b> -Eigenschaft zuordnen. Weitere Informationen zum XML-Schema für Formularbereiche finden Sie unter Microsoft Outlook 2010 XML Schema Reference in der <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></para>
            <para>der Wert der die <b>DisplayName</b> -Eigenschaft wird zur Laufzeit auf der Registerkarte Anzeigen von Microsoft Office Fluent angezeigt. Menüband für einen separaten Formularbereich oder in der Kopfzeile eines angrenzenden Formularbereichs.  Es wird für das Standardgebietsschema verwendet und kann überschrieben werden, indem die &lt;StringOverride&gt; Tag in den entsprechenden Formularbereichmanifest XML-Datei. Die Zeichenfolge wird Groß-/Kleinschreibung unterschieden, und die maximale Länge beträgt 256 Zeichen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-114">
              <para>The display name is optional for a form region. If you have defined a value for the &lt;formRegionName&gt; tag in the corresponding form region manifest XML file, this value will map to the value of the <b>DisplayName</b> property. For more information on the XML schema for form regions, see the Microsoft Outlook 2010 XML Schema Reference in the <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></para>
              <para>The value of the <b>DisplayName</b> property is displayed at runtime in the Show tab of the Microsoft Office Fluent ribbon for a separate form region, or in the header of an adjoining form region.  It is used for the default locale, and can be overridden by the &lt;stringOverride&gt; tag in the corresponding form region manifest XML file. The string is case-insensitive, and its maximum length is 256 characters.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoLayout">
      <MemberSignature Language="C#" Value="public bool EnableAutoLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.EnableAutoLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoLayout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-115">Zurückgeben oder Festlegen eines <b>booleschen</b> (<b>Bool</b> in c#), der angibt, ob Sie das automatische Layout Ändern der Größe Feature beim Entwerfen von Formularbereichen im Formular-Designer verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-115">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that specifies whether to use the automatic layout resizing feature when designing form regions in the forms designer.</span>
          </span>
          <span data-ttu-id="eda8d-116">Lese-/Schreibzugriff</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-116">Read/write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eda8d-117">
            <para>Das Ändern der Größe Automatisches Layout-Feature im Formular-Designer neu berechnet, wenn das Layout von Formularen dynamisch Größe des Formulars geändert wird. Dieses Feature ist nur verfügbar für Formularbereiche im Formular-Designer.</para>
            <para>, Wenn diese Eigenschaft auf <b>True</b>festgelegt ist, führt im Formular-Designer Ändern der Größe von automatischen Layouts.  Wenn diese Eigenschaft auf <b>False</b>festgelegt ist, wird im Formular-Designer keine automatische Layout Ändern der Größe von durchgeführt.  Der Standardwert lautet <b>True</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-117">
              <para>The automatic layout resizing feature in the forms designer recalculates the form layout dynamically as the form is resized. This feature is only available to form regions in the forms designer.</para>
              <para>When this property is <b>True</b>, the forms designer performs automatic layout resizing.  When this property is <b>False</b>, the forms designer does not perform automatic layout resizing.  The default value is <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public object Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Form" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Form { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64313)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-p107">Gibt ein <b>Objekt</b> zurück, das <b>MSForms.UserForm</b> -Objekt darstellt. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-p107">Returns an <b>Object</b> representing the <b>MSForms.UserForm</b> object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormRegionMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Outlook.OlFormRegionMode FormRegionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.FormRegionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormRegionMode As OlFormRegionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::OlFormRegionMode FormRegionMode { Microsoft::Office::Interop::Outlook::OlFormRegionMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.OlFormRegionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-p108">Gibt eine <b>OlFormRegionMode</b> -Konstante, die angibt, ob der Formularbereich in einer Leseseite befindet, Verfassenlayout oder einem Lesebereich. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-p108">Returns an <b>OlFormRegionMode</b> constant that indicates whether the form region is in a read page, compose page, or Reading Pane. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eda8d-122">
            <para>Wenn der Benutzer ein e-Mail-Element im Lesebereich verfügt, können Sie die <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Sent" /> -Eigenschaft auf Weiter zu bestimmen, ob der Benutzer in den Bearbeitungsmodus oder den Lesemodus des Lesebereichs. Ein e-Mail-Element wird im Lesebereich anders angezeigt, wenn sie befindet sich in den Bearbeitungsmodus (das e-Mail-Element ist im Ordner "Entwürfe") als ist, wenn es in der Lesemodus (das e-Mail-Element befindet sich im Ordner Posteingang oder gesendet).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-122">
              <para>If the user has a mail item in the Reading Pane, you can use the <see cref="P:Microsoft.Office.Interop.Outlook._MailItem.Sent" /> property to further determine if the user is in the edit mode or the read mode of the Reading Pane. A mail item is displayed differently in the Reading Pane if it is in the edit mode (the mail item is in the Draft folder) than if it is in the read mode (the mail item is in the Inbox or Sent folder).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inspector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.Inspector Inspector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.Inspector Inspector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Inspector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Inspector As Inspector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::Inspector ^ Inspector { Microsoft::Office::Interop::Outlook::Inspector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.Inspector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-123">Gibt ein <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> -Objekt, das den Inspektor, der als Host für den Formularbereich fungiert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-123">Returns an <see cref="T:Microsoft.Office.Interop.Outlook.Inspector" /> object representing the Inspector that hosts the form region.</span>
          </span>
          <span data-ttu-id="eda8d-124">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-124">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eda8d-125">
            <para>Wenn der Formularbereich im Lesebereich angezeigt wird, wird <b>Nothing</b> (ein Nullverweis (Nothing in Visual Basic) in c#) zurückgegeben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-125">
              <para>Returns <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#) if the form region is displayed in the Reading Pane.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalName">
      <MemberSignature Language="C#" Value="public string InternalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.InternalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8450)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-126">Gibt einen <b>String</b> (<b>Zeichenfolge</b> in c#), der den internen programmgesteuerten Namen des Formularbereichs gemäß Definition im Manifest für den Formularbereich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-126">Returns a <b>String</b> (<b>string</b> in C#) that represents the internal programmatic name of the form region as defined in the manifest for the form region.</span>
          </span>
          <span data-ttu-id="eda8d-127">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-127">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eda8d-128">
            <para>Der interne Name ist für einen Formularbereich erforderlich. Die &lt;Namen&gt; Tag in den entsprechenden Formularbereichmanifest XML-Datei auf den Wert der <b>InternalName</b> -Eigenschaft zugeordnet wird. Weitere Informationen zum XML-Schema für Formularbereiche finden Sie unter Microsoft Outlook 2010 XML Schema Reference in der <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></para>
            <para>der Wert der <b>InternalName</b> -Eigenschaft wird von der Add-in oder Microsoft Outlook verweisen auf den Formularbereich beispielsweise, um zu bestimmen, welcher Formularbereich geladen wird oder zum Laden von Zeichenfolgen aus den Ressourcen lokalisierte Zeichenfolge. <b>InternalName</b> -Eigenschaft unterstützt nur ASCII-Zeichen. Die Zeichenfolge wird Groß-/Kleinschreibung unterschieden, und die maximale Länge beträgt 256 Zeichen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-128">
              <para>The internal name is required for a form region. The &lt;name&gt; tag in the corresponding form region manifest XML file maps to the value of the <b>InternalName</b> property. For more information on the XML schema for form regions, see the Microsoft Outlook 2010 XML Schema Reference in the <a href="http://msdn.microsoft.com/en-us/library/default.aspx">MSDN Library</a></para>
              <para>The value of the <b>InternalName</b> property is used by the add-in or Microsoft Outlook to refer to the form region, for example, to determine which form region is being loaded or to load strings from the localized string resources. The <b>InternalName</b> property supports only ASCII characters. The string is case-insensitive, and its maximum length is 256 characters.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64312)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-129">Gibt einen Wert <b>vom Typ Boolean</b> (<b>Bool</b> in c#), die angibt, ob der Formularbereich erweitert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-129">Returns a <b>Boolean</b> (<b>bool</b> in C#) that indicates if the form region is expanded.</span>
          </span>
          <span data-ttu-id="eda8d-130">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-130">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eda8d-131">
            <para>Diese Eigenschaft betrifft nur angrenzende Formularbereiche und wird bei separaten Formularbereichen ignoriert.</para>
            <para>Outlook immer zuerst lädt ein Formularbereichs im erweiterten Zustand und <b>IsExpanded</b> auf <b>True</b>festgelegt. Wenn der Anfangszustand des Formularbereichs reduziert wird, wird Outlook sofort den Formularbereich, löst schließt die <see cref="E:Microsoft.Office.Interop.Outlook.FormRegionEvents_Event.Expanded" /> Ereignis mit der <paramref name="Expand" /> Parameter <b>False</b>und legt <b>IsExpanded</b> auf <b>false festgelegt</b>wird. </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-131">
              <para>This property applies to adjoining form regions only and is ignored for separate form regions.</para>
              <para>Outlook always first loads a form region in an expanded state and sets <b>IsExpanded</b> to <b>True</b>. If the initial state of the form region is to be collapsed, then Outlook immediately closes the form region, fires the <see cref="E:Microsoft.Office.Interop.Outlook.FormRegionEvents_Event.Expanded" /> event with the <paramref name="Expand" /> parameter being <b>False</b>, and sets  <b>IsExpanded</b> to <b>False</b>. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64096)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-p112">Gibt ein <b>Objekt</b>, das an den Formularbereich gebunden Outlook-Element entspricht. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-p112">Returns an <b>Object</b> corresponding to the Outlook item bound to the form region. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public int Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Language { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64065)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-134">Gibt einen <b>ganze Zahl</b> (<b>Int</b> in c#)-Wert, der die LCID für die aktuelle Sprache angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-134">Returns an <b>Integer</b> (<b>int</b> in C#) value that indicates the LCID for the current language.</span>
          </span>
          <span data-ttu-id="eda8d-135">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-135">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-p114">Gibt das übergeordnete <b>Objekt</b> des Formularbereichs zurück. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-p114">Returns the parent <b>Object</b> of the form region. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflow">
      <MemberSignature Language="C#" Value="public void Reflow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reflow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.Reflow" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reflow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reflow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64315)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-138">Zwingt Outlook, die Höhe eines angrenzenden Formularbereichs neu zu berechnen, um alle sichtbaren Steuerelemente im Formularbereich anzuzeigen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-138">Causes Outlook to recalculate the height of an adjoining form region to display all  the visible controls in the form region.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eda8d-139">
            <para>Die <b>Reflow</b> -Methode gilt nur für angrenzende Formularbereiche. Keine Aktion ausgeführt wird bei separaten Formularbereichen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-139">
              <para>The <b>Reflow</b> method only applies to adjoining form regions. No action occurs for separate form regions.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-140">Aktiviert den Formularbereich, sodass er angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-140">Makes the form region the active form region such that it becomes visible.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eda8d-141">
            <para>Wenn der Formularbereich ein angrenzender Formularbereich befindet, klicken Sie dann <b>Wählen Sie</b> wird erweitern Sie den Formularbereich (sofern er nicht bereits erweitert ist) und setzen Sie den Fokus auf das erste Steuerelement auf der Seite. Wenn der Formularbereich ist ein separater Formularbereich und nicht bereits die aktive Seite und dann <b>wird der Formularbereich</b> Seite und Festlegen des Fokus auf das erste Steuerelement auf der Seite. Wenn der Formularbereich ein separater Formularbereich ist und bereits dem aktiven Zeichenblatt, passiert dann nichts.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-141">
              <para>If the form region is an adjoining form region, then <b>Select</b> will expand the form region (if it is not already expanded) and set focus on the first control on that page. If the form region is a separate form region and is not already the active page, then <b>Select</b> will swtich to the form region page and set focus on the first control on that page. If the form region is a separate form region and is already the active page, then nothing happens.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Outlook.NameSpace Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Outlook.NameSpace Session" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As NameSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Outlook::NameSpace ^ Session { Microsoft::Office::Interop::Outlook::NameSpace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(61451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Outlook.NameSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-142">Gibt die <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" /> -Objekt für die aktuelle Sitzung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-142">Returns the <see cref="T:Microsoft.Office.Interop.Outlook.NameSpace" />  object for the current session.</span>
          </span>
          <span data-ttu-id="eda8d-143">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-143">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eda8d-144">
            <para>Die <b>Session</b> -Eigenschaft und die <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> -Methode kann austauschbar verwendet werden, um das <b>NameSpace</b> -Objekt für die aktuelle Sitzung abzurufen. Beide Member haben denselben Zweck. Führen Sie die folgenden Paare von Anweisungen beispielsweise die gleiche Funktion:</para>
            <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
            <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
            <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
            <code>Outlook.NameSpace objSession = Application.Session;</code>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-144">
              <para>The <b>Session</b> property and the <see cref="M:Microsoft.Office.Interop.Outlook._Application.GetNamespace(System.String)" /> method can be used interchangeably to obtain the <b>NameSpace</b> object for the current session. Both members serve the same purpose. For example, the following pairs of statements perform the same function:</para>
              <code>Dim objNamespace As Outlook.NameSpace = _
    Application.GetNamespace("MAPI")</code>
              <code>Dim objSession As Outlook.NameSpace = Application.Session</code>
              <code>Outlook.NameSpace objNamespace = 
    Application.GetNamespace("MAPI");</code>
              <code>Outlook.NameSpace objSession = Application.Session;</code>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetControlItemProperty">
      <MemberSignature Language="C#" Value="public void SetControlItemProperty (object Control, string PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetControlItemProperty([in]object Control, [in]string PropertyName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Outlook._FormRegion.SetControlItemProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetControlItemProperty (Control As Object, PropertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetControlItemProperty(System::Object ^ Control, System::String ^ PropertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Object" />
        <Parameter Name="PropertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="eda8d-145">Ein Steuerelement im Formularbereich, der die Eigenschaft von angegeben <paramref name="PropertyName" /> gebunden werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-145">A control in the form region to which the property specified by <paramref name="PropertyName" /> will be bound.</span>
          </span>
        </param>
        <param name="PropertyName">
          <span data-ttu-id="eda8d-146">Der Name der Eigenschaft, die an das Steuerelement gebunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-146">The name of the property that will be bound to the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eda8d-147">Bindet eine explizite integrierte Eigenschaft oder benutzerdefinierte Eigenschaft an ein Steuerelement im Formularbereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-147">Binds an explicit  built-in property or a custom property to a control in the form region.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="eda8d-148">
            <para>Mit dieser Methode können Sie eine explizite integrierte Eigenschaft oder eine benutzerdefinierte Eigenschaft an ein Steuerelement gebunden werden. Sie müssen auf die Eigenschaft verweisen von Zeichenfolgennamens, beispielsweise <b>Betreff</b>, und nicht von Namespace, z. B. http://schemas.microsoft.com/mapi/proptag/0x0037001E.</para>
            <para>Der <paramref name="PropertyName" /> Parameter ist nicht Groß-/Kleinschreibung beachtet. Beispielsweise <b>SetControlItemProperty</b> interpretiert Argument <b>CustomerId</b><b>CustomerID</b> identisch sein und bindet das angegebene Steuerelement an die integrierte <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CustomerID" /> -Eigenschaft.</para>
            <para>Als die <b>SetControlItemProperty</b> -Methode des ein <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> -Objekts, Sie können auch Code ähnlich der folgenden verwenden, um eine Eigenschaft wie die <b>Subject</b> -Eigenschaft auf ein Steuerelement zu binden:</para>
            <code>myPage.Controls("bar").ItemProperty = "subject"</code>
            <code>myPage.Controls("bar").ItemProperty = "subject";</code>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-148">
              <para>You can use this method to bind an explicit built-in property or a custom property to a control. You must reference the property by its string name, for example, <b>Subject</b>, and not by namespace, for example, http://schemas.microsoft.com/mapi/proptag/0x0037001E.</para>
              <para>The <paramref name="PropertyName" /> parameter is not case-sensitive. For example, <b>SetControlItemProperty</b> interprets an argument, <b>CustomerId</b>, to be the same as <b>CustomerID</b> and binds the specified control to the built-in <see cref="P:Microsoft.Office.Interop.Outlook._ContactItem.CustomerID" /> property.</para>
              <para>Other than using the <b>SetControlItemProperty</b> method of a <see cref="T:Microsoft.Office.Interop.Outlook.FormRegion" /> object, you can also use code similar to the following to bind a property such as the  <b>Subject</b> property to a control:</para>
              <code>myPage.Controls("bar").ItemProperty = "subject"</code>
              <code>myPage.Controls("bar").ItemProperty = "subject";</code>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressControlReplacement">
      <MemberSignature Language="C#" Value="public bool SuppressControlReplacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressControlReplacement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.SuppressControlReplacement" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressControlReplacement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressControlReplacement { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(64518)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-149">Zurückgeben oder Festlegen eines <b>booleschen</b> (<b>Bool</b> in c#), die verhindert, dass Outlook automatisch ein Forms 2.0-Steuerelement durch ein entsprechendes mit Design versehenes Outlook-Steuerelement zur Entwurfs- und Laufzeit ersetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-149">Returns or sets a <b>Boolean</b> (<b>bool</b> in C#) that disables Outlook from automatically replacing  a Forms 2.0 control by  a themed Outlook control at design time and runtime.</span>
          </span>
          <span data-ttu-id="eda8d-150">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-150">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eda8d-151">
            <para>Weitere Informationen zu Outlook automatisch ein Forms 2.0-Steuerelement durch ein entsprechendes mit Design versehenes Outlook-Steuerelement ersetzt finden Sie unter <a href="http://go.microsoft.com/fwlink/?LinkId=87823">Steuerelemente in einem benutzerdefinierten Formular</a></para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-151">
              <para>For more information on Outlook automatically replacing a Forms 2.0 control by  a themed Outlook counterpart control, see <a href="http://go.microsoft.com/fwlink/?LinkId=87823">Controls in a Custom Form</a></para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Outlook._FormRegion.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Outlook</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(8451)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eda8d-152">Zurückgeben oder Festlegen einer <see cref="T:System.Boolean" /> (<b>Bool</b> für c#)-Wert, der angibt, ob der Formularbereich ein- oder ausgeblendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-152">Returns or sets a <see cref="T:System.Boolean" /> (<b>bool</b> for C#) value that indicates whether the form region is visible or hidden.</span>
          </span>
          <span data-ttu-id="eda8d-153">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-153">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="eda8d-154">
            <para>
              <b>True,</b> Wenn der Formularbereich angezeigt wird. <b>False,</b> Wenn es ausgeblendet ist. Der Standardwert ist <b>True</b>. </para>
            <para>Verwenden Sie die <b>Visible</b> -Eigenschaft den um Zugriff auf Informationen zu steuern, ohne es in einem Formularbereich anzuzeigen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="eda8d-154">
              <para>
                <b>True</b> if the form region is visible; <b>False</b> if it is hidden. The default is <b>True</b>. </para>
              <para>Use the <b>Visible</b> property to control access to information without displaying it in a form region.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>